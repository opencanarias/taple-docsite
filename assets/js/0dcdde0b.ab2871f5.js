"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[7532],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,h=u["".concat(p,".").concat(m)]||u[m]||c[m]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},67340:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={},i="Quickstart",l={unversionedId:"build/quickstart",id:"version-0.1/build/quickstart",title:"Quickstart",description:"Description",source:"@site/versioned_docs/version-0.1/build/quickstart.md",sourceDirName:"build",slug:"/build/quickstart",permalink:"/taple-docsite/docs/0.1/build/quickstart",draft:!1,tags:[],version:"0.1",lastUpdatedAt:1696859454,formattedLastUpdatedAt:"Oct 9, 2023",frontMatter:{},sidebar:"tutorialsSidebar",previous:{title:"TAPLE Client First steps",permalink:"/taple-docsite/docs/0.1/build/taple-client"},next:{title:"Introduction Tutorial",permalink:"/taple-docsite/docs/0.1/build/tutorial-from-0/introduction"}},p={},s=[{value:"Description",id:"description",level:2},{value:"Setting Up Environment",id:"setting-up-environment",level:2},{value:"Running a 3-node network",id:"running-a-3-node-network",level:2},{value:"Launching first node",id:"launching-first-node",level:3},{value:"Launching second and third node",id:"launching-second-and-third-node",level:3},{value:"Create a governance and scheme",id:"create-a-governance-and-scheme",level:2},{value:"Create a subject",id:"create-a-subject",level:2},{value:"Create an event",id:"create-an-event",level:2},{value:"Create more subjects",id:"create-more-subjects",level:2},{value:"Display subjects of a node",id:"display-subjects-of-a-node",level:2},{value:"Stopping Nodes",id:"stopping-nodes",level:2}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quickstart"},"Quickstart"),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"In this section, you will find a tutorial on how to set up a simple case of use for foods batches traceability using ",(0,r.kt)("strong",{parentName:"p"},"TAPLE")," technology by means of scripts."),(0,r.kt)("h2",{id:"setting-up-environment"},"Setting Up Environment"),(0,r.kt)("p",null,"Before we begin, let's prepare the environment:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Revise that you meet the ",(0,r.kt)("a",{parentName:"li",href:"/taple-docsite/docs/0.1/build/"},"requirements"),"."),(0,r.kt)("li",{parentName:"ol"},"Let's clone the ",(0,r.kt)("strong",{parentName:"li"},"Taple Client")," repository where the scripts we will use later are stored:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone -b release-0.1 https://github.com/opencanarias/taple-client.git ~/taple-client\n"))),(0,r.kt)("li",{parentName:"ol"},"We move to the folder where the scripts are located:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"$ cd ~/taple-client/examples/quickstart/scripts/\n")))),(0,r.kt)("h2",{id:"running-a-3-node-network"},"Running a 3-node network"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"launching-first-node"},"Launching first node"),(0,r.kt)("p",null,"Before launching any TAPLE node, we need cryptographic material to identify the node, to accomplish this, before each launch,  we need to run ",(0,r.kt)("strong",{parentName:"p"},"taple-keygen"),", getting the material we need:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node 0. Getting cryptographic material"',title:'"Node',"0.":!0,Getting:!0,cryptographic:!0,'material"':!0},'$ taple-keygen ed25519\nkeygen\n["taple-keygen", "ed25519"]\nPRIVATE KEY ED25519 (HEX): 01e1ad914f378fe4b52b2b2bea52aded744e1a3a056fec7a436a5bf0226b9d6e\nCONTROLLER ID ED25519: EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\nPeerID: 12D3KooWC5kULse9cPS9vhKfmntwjcLnde6RqHjbqYn4wFj8yxfX\n')),(0,r.kt)("p",null,"We will save these values for later. For now, let's raise a TAPLE node by executing the script ",(0,r.kt)("strong",{parentName:"p"},"launch_node.sh"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node 0. Run script"',title:'"Node',"0.":!0,Run:!0,'script"':!0},"$ ./launch_node.sh\n")),(0,r.kt)("p",null,"First, it will prompt for an integer. This number must be unique and will be used to determine the HTTP and P2P port that will be assigned."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node 0. Input Number ID"',title:'"Node',"0.":!0,Input:!0,Number:!0,'ID"':!0},"Enter a number to identify the node that will be deployed: 0\n")),(0,r.kt)("p",null,"Next, it will prompt for a ",(0,r.kt)("strong",{parentName:"p"},"secret key")," . This value is the same obtained previously by running ",(0,r.kt)("strong",{parentName:"p"},"taple-keygen")," and will be the one we will enter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node 0. Giving cryptographic material"',title:'"Node',"0.":!0,Giving:!0,cryptographic:!0,'material"':!0},"Requesting cryptographic material.\nEnter secret key: 01e1ad914f378fe4b52b2b2bea52aded744e1a3a056fec7a436a5bf0226b9d6e\n")),(0,r.kt)("p",null,"Now it's the turn for the known nodes that it will use as bootstrap nodes. Since this is our first node, we will not enter anything and will proceed by pressing ENTER. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node 0. Setting known nodes"',title:'"Node',"0.":!0,Setting:!0,known:!0,'nodes"':!0},"Requesting known nodes.\nEnter address of a known node (leave empty to stop requesting):\n<STOP>\n")),(0,r.kt)("p",null,"With this, we will have all the necessary parameters to run TAPLE."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node 0. Launching node"',title:'"Node',"0.":!0,Launching:!0,'node"':!0},'[2023-01-17T16:25:24Z INFO  taple_client] AppSettings { network: NetworkSettings { p2p_port: 11000, addr: "/ip4/0.0.0.0/tcp", known_nodes: [] }, node: NodeSettings { key_derivator: Ed25519, secret_key: Some("01e1ad914f378fe4b52b2b2bea52aded744e1a3a056fec7a436a5bf0226b9d6e"), seed: None, digest_derivator: Blake3_256, replication_factor: 0.25, timeout: 3000, passvotation: 0, dev_mode: false }, database: DatabaseSettings { path: "/tmp/data0" }, http_addr: "0.0.0.0", http_port: 10000, x_api_key: None, swagger_ui: false }\n[2023-01-17T16:25:24Z INFO  taple_client] Controller ID: EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\n[2023-01-17T16:25:24Z INFO  network::network] RED: "/ip4/192.168.1.46/tcp/11000/p2p/12D3KooWC5kULse9cPS9vhKfmntwjcLnde6RqHjbqYn4wFj8yxfX"\n[2023-01-17T16:25:24Z INFO  network::network] RED: "/ip4/25.33.212.160/tcp/11000/p2p/12D3KooWC5kULse9cPS9vhKfmntwjcLnde6RqHjbqYn4wFj8yxfX"\n[2023-01-17T16:25:24Z INFO  network::network] RED: "/ip4/127.0.0.1/tcp/11000/p2p/12D3KooWC5kULse9cPS9vhKfmntwjcLnde6RqHjbqYn4wFj8yxfX"\n[2023-01-17T16:25:24Z INFO  network::network] RED: "/ip4/172.17.0.1/tcp/11000/p2p/12D3KooWC5kULse9cPS9vhKfmntwjcLnde6RqHjbqYn4wFj8yxfX"\n')),(0,r.kt)("h3",{id:"launching-second-and-third-node"},"Launching second and third node"),(0,r.kt)("p",null,"We will repeat previous steps. Since we are going to raise two nodes, we will run ",(0,r.kt)("strong",{parentName:"p"},"taple-keygen")," and ",(0,r.kt)("strong",{parentName:"p"},"launch_node.sh")," twice."),(0,r.kt)("p",null,"Lets start with the second node. First we get the cryptographic material:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node 1. Getting cryptographic material for Node 1"',title:'"Node',"1.":!0,Getting:!0,cryptographic:!0,material:!0,for:!0,Node:!0,'1"':!0},'$ taple-keygen ed25519\nkeygen\n["taple-keygen", "ed25519"]\nPRIVATE KEY ED25519 (HEX): 0a17286d8dd6a234b5b6140aeed93eb150cf4c24a1dfd14df6325d4c7401f015\nCONTROLLER ID ED25519: EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\nPeerID: 12D3KooWCMc5Lp51YC9chjJ47b6P7puc5pXjKhqKAZpWHtQ9agvk\n')),(0,r.kt)("p",null,"Later, following the same pattern described ",(0,r.kt)("a",{parentName:"p",href:"/taple-docsite/docs/0.1/build/quickstart#launching-first-node"},"before"),", we will launch the second node, with the difference that now the address to the known node is to the first one deployed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",0:!0,className:"language-bash",metastring:'title="Node 0 Address"',title:'"Node','Address"':!0},'...\n"/ip4/127.0.0.1/tcp/11000/p2p/12D3KooWC5kULse9cPS9vhKfmntwjcLnde6RqHjbqYn4wFj8yxfX"\n...\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node 1. Launching Node 1"',title:'"Node',"1.":!0,Launching:!0,Node:!0,'1"':!0},'$ ./launch_node.sh \n0.1: Pulling from opencanarias/taple-client\nDigest: sha256:d3382b5407d6a494f09fabec7d17fb61066751605020d014528fc86548687b8d\nStatus: Image is up to date for opencanarias/taple-client:0.1\ndocker.io/opencanarias/taple-client:0.1\nImage downloaded successfully.\n\nEnter a number to identify the node that will be deployed: 1\n\nRequesting cryptographic material.\nEnter secret key: 0a17286d8dd6a234b5b6140aeed93eb150cf4c24a1dfd14df6325d4c7401f015\nRequesting known nodes.\nEnter address of known node (leave empty to stop requesting):/ip4/127.0.0.1/tcp/11000/p2p/12D3KooWC5kULse9cPS9vhKfmntwjcLnde6RqHjbqYn4wFj8yxfX\nEnter address of known node (leave empty to stop requesting):\n<STOP>\n\n[2023-01-17T16:26:17Z INFO  taple_client] AppSettings { network: NetworkSettings { p2p_port: 11001, addr: "/ip4/0.0.0.0/tcp", known_nodes: ["/ip4/127.0.0.1/tcp/11000/p2p/12D3KooWC5kULse9cPS9vhKfmntwjcLnde6RqHjbqYn4wFj8yxfX"] }, node: NodeSettings { key_derivator: Ed25519, secret_key: Some("0a17286d8dd6a234b5b6140aeed93eb150cf4c24a1dfd14df6325d4c7401f015"), seed: None, digest_derivator: Blake3_256, replication_factor: 0.25, timeout: 3000, passvotation: 0, dev_mode: false }, database: DatabaseSettings { path: "/tmp/data1" }, http_addr: "0.0.0.0", http_port: 10001, x_api_key: None, swagger_ui: false }\n[2023-01-17T16:26:17Z INFO  taple_client] Controller ID: EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\n[2023-01-17T16:26:17Z INFO  network::network] RED: "/ip4/172.17.0.1/tcp/11001/p2p/12D3KooWCMc5Lp51YC9chjJ47b6P7puc5pXjKhqKAZpWHtQ9agvk"\n[2023-01-17T16:26:17Z INFO  network::network] RED: "/ip4/192.168.1.46/tcp/11001/p2p/12D3KooWCMc5Lp51YC9chjJ47b6P7puc5pXjKhqKAZpWHtQ9agvk"\n[2023-01-17T16:26:17Z INFO  network::network] RED: "/ip4/127.0.0.1/tcp/11001/p2p/12D3KooWCMc5Lp51YC9chjJ47b6P7puc5pXjKhqKAZpWHtQ9agvk"\n[2023-01-17T16:26:17Z INFO  network::network] RED: "/ip4/25.33.212.160/tcp/11001/p2p/12D3KooWCMc5Lp51YC9chjJ47b6P7puc5pXjKhqKAZpWHtQ9agvk"\n')),(0,r.kt)("p",null,"We repeat the same process for the third node:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node 2. Getting cryptographic material for Node 2"',title:'"Node',"2.":!0,Getting:!0,cryptographic:!0,material:!0,for:!0,Node:!0,'2"':!0},'$ taple-keygen ed25519\nkeygen\n["taple-keygen", "ed25519"]\nPRIVATE KEY ED25519 (HEX): 09319f4332335e96e3335b6970c5834fe946d87211df47eda63eef8494e6513b\nCONTROLLER ID ED25519: EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\nPeerID: 12D3KooWKvk51kTNB9ARdACDpsohCX3aaBA4Z2tND4FXQwuSb95S\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node 2. Launching Node 2"',title:'"Node',"2.":!0,Launching:!0,Node:!0,'2"':!0},'$ ./launch_node.sh \n0.1: Pulling from opencanarias/taple-client\nDigest: sha256:d3382b5407d6a494f09fabec7d17fb61066751605020d014528fc86548687b8d\nStatus: Image is up to date for opencanarias/taple-client:0.1\ndocker.io/opencanarias/taple-client:0.1\nImage downloaded successfully.\n\nEnter a number to identify the node that will be deployed: 2\n\nRequesting cryptographic material.\nEnter secret key: 09319f4332335e96e3335b6970c5834fe946d87211df47eda63eef8494e6513b\nRequesting known nodes.\nEnter address of known node (leave empty to stop requesting):/ip4/127.0.0.1/tcp/11000/p2p/12D3KooWC5kULse9cPS9vhKfmntwjcLnde6RqHjbqYn4wFj8yxfX\nEnter address of known node (leave empty to stop requesting):\n<STOP>\n\n[2023-01-17T16:26:45Z INFO  taple_client] AppSettings { network: NetworkSettings { p2p_port: 11002, addr: "/ip4/0.0.0.0/tcp", known_nodes: ["/ip4/127.0.0.1/tcp/11000/p2p/12D3KooWC5kULse9cPS9vhKfmntwjcLnde6RqHjbqYn4wFj8yxfX"] }, node: NodeSettings { key_derivator: Ed25519, secret_key: Some("09319f4332335e96e3335b6970c5834fe946d87211df47eda63eef8494e6513b"), seed: None, digest_derivator: Blake3_256, replication_factor: 0.25, timeout: 3000, passvotation: 0, dev_mode: false }, database: DatabaseSettings { path: "/tmp/data2" }, http_addr: "0.0.0.0", http_port: 10002, x_api_key: None, swagger_ui: false }\n[2023-01-17T16:26:45Z INFO  taple_client] Controller ID: EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\n[2023-01-17T16:26:45Z INFO  network::network] RED: "/ip4/172.17.0.1/tcp/11002/p2p/12D3KooWKvk51kTNB9ARdACDpsohCX3aaBA4Z2tND4FXQwuSb95S"\n[2023-01-17T16:26:45Z INFO  network::network] RED: "/ip4/25.33.212.160/tcp/11002/p2p/12D3KooWKvk51kTNB9ARdACDpsohCX3aaBA4Z2tND4FXQwuSb95S"\n[2023-01-17T16:26:45Z INFO  network::network] RED: "/ip4/192.168.1.46/tcp/11002/p2p/12D3KooWKvk51kTNB9ARdACDpsohCX3aaBA4Z2tND4FXQwuSb95S"\n[2023-01-17T16:26:45Z INFO  network::network] RED: "/ip4/127.0.0.1/tcp/11002/p2p/12D3KooWKvk51kTNB9ARdACDpsohCX3aaBA4Z2tND4FXQwuSb95S"\n')),(0,r.kt)("p",null,"We can check everything is working fine by checking that our three terminals are up and running our three TAPLE nodes."),(0,r.kt)("h2",{id:"create-a-governance-and-scheme"},"Create a governance and scheme"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"The next step would be to create a governance. Since we are working with three nodes, we will define three members inside the governance. Each one being a validator of the subject , because of that, in policies, we are assigning them as validators with a ",(0,r.kt)("a",{parentName:"p",href:"/taple-docsite/docs/0.1/discover/governance"},"quorum")," of 50% so we only need the signature of two of the three nodes to accept it inside the ledger. Also, to model the use case, we are defining an schema so our subject will store three properties: ",(0,r.kt)("inlineCode",{parentName:"p"},"temperature"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"location")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"batch")," . "),(0,r.kt)("p",null,"In the next code block we can see our governance :"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Complete Governance JSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "members": [ \n    {\n        "id": "Company-0",\n        "tags": {},\n        "description": "Headquarters in 0",\n        "key": <ControllerID of node-0>\n    },\n    {\n        "id": "Company-1",\n        "tags": {},\n        "description": "Headquarters in 1",\n        "key": <ControllerID of node-1>\n    },\n    {\n        "id": "Company-2",\n        "tags": {},\n        "description": "Headquarters in 2",\n        "key": <ControllerID of node-2>\n    }\n    ],\n    "schemas": [\n        {\n            "id": "Test",\n            "tags": {},\n            "content": {\n                "type": "object",\n                "additionalProperties": false,\n                "required": [\n                    "temperature",\n                    "location",\n                    "batch"\n                ],\n                "properties": {\n                    "temperature": {"type": "integer"},\n                    "location": {"type": "string" },\n                    "batch": {\n                        "type": "object",\n                        "additionalProperties": false,\n                        "required": [ "weight", "origin" ],\n                        "properties": {\n                            "weight": {"type": "number", "minimum": 0},\n                            "origin": {"type": "string"}\n                        }\n                    }\n                }\n            }\n        }\n    ],\n    "policies": [\n        {\n            "id": "governance",\n            "validation": {\n                "quorum": 0.5,\n                "validators": [\n                    <ControllerID of node-0>,\n                    <ControllerID of node-1>,\n                    <ControllerID of node-2>\n                ]\n            },\n            "approval": {\n                "quorum": 0.5,\n                "approvers": [\n                    <ControllerID of node-0>,\n                    <ControllerID of node-1>,\n                    <ControllerID of node-2>\n                ]\n            },\n            "invokation": {\n                "owner": { \n                    "allowance": true,\n                    "approvalRequired": false\n                },\n                "set": {\n                    "allowance": false,\n                    "approvalRequired": false,\n                    "invokers": []\n                },\n                "all": {\n                    "allowance": false,\n                    "approvalRequired": false\n                },\n                "external": {\n                    "allowance": false,\n                    "approvalRequired": false\n                }\n            }\n        },\n        {\n            "id": "Test",\n            "validation": {\n                "quorum": 0.5,\n                "validators": [\n                    <ControllerID of node-0>,\n                    <ControllerID of node-1>,\n                    <ControllerID of node-2>\n                ]\n            },\n            "approval": {\n                "quorum": 0,\n                "approvers": []\n            },\n            "invokation": {\n                "owner": {\n                    "allowance": true,\n                    "approvalRequired": false\n                },\n                "set": {\n                    "allowance": false,\n                    "approvalRequired": false,\n                    "invokers": []\n                },\n                "all": {\n                    "allowance": false,\n                    "approvalRequired": false\n                },\n                "external": {\n                    "allowance": false,\n                    "approvalRequired": false\n                }\n            }\n        }\n    ]\n}\n'))),(0,r.kt)("p",null,"This governance is created by using ",(0,r.kt)("strong",{parentName:"p"},"create_governance.sh"),". When we run it, script will be asking us for:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"Controller ids"))," of the members.For the example they were:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Controller id for Node 0"',title:'"Controller',id:!0,for:!0,Node:!0,'0"':!0},"...\n[2023-01-17T16:25:24Z INFO  taple_client] Controller ID: EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\n....\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Controller id for Node 1"',title:'"Controller',id:!0,for:!0,Node:!0,'1"':!0},"...\n[2023-01-17T16:26:17Z INFO  taple_client] Controller ID: EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\n...\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Controller id for Node 2"',title:'"Controller',id:!0,for:!0,Node:!0,'2"':!0},"...\n[2023-01-17T16:26:45Z INFO  taple_client] Controller ID: EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\n...\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"Number ID"))," from the node we want to create the governance. For the example it will be number ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),". ")),(0,r.kt)("p",null,"We introduce it you will have an output ",(0,r.kt)("strong",{parentName:"p"},"similar")," to the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Executing create_governance.sh for Node 0"',title:'"Executing',"create_governance.sh":!0,for:!0,Node:!0,'0"':!0},'$ ./create_governance.sh \nRequesting controllerID.\nEnter the controllerID of the node that will be inserted (empty to exit): EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\nEnter the controllerID of the node that will be inserted (empty to exit): EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\nEnter the controllerID of the node that will be inserted (empty to exit): EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\nEnter the controllerID of the node that will be inserted (empty to exit): \n<STOP>\n\nRequesting HTTP PORT.\nEnter the number ID of the NODE where request for governance creation will be sent: 0\n\n{"request":{"Create":{"governance_id":"","schema_id":"governance","namespace":"","payload":{"Json":"{\\"members\\":[{\\"description\\":\\"Headquarters in 1\\",\\"id\\":\\"Company-1\\",\\"key\\":\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"tags\\":{}},{\\"description\\":\\"Headquarters in 2\\",\\"id\\":\\"Company-2\\",\\"key\\":\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"tags\\":{}},{\\"description\\":\\"Headquarters in 3\\",\\"id\\":\\"Company-3\\",\\"key\\":\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\",\\"tags\\":{}}],\\"policies\\":[{\\"approval\\":{\\"approvers\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"],\\"quorum\\":0.5},\\"id\\":\\"governance\\",\\"invokation\\":{\\"all\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"external\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"owner\\":{\\"allowance\\":true,\\"approvalRequired\\":false},\\"set\\":{\\"allowance\\":false,\\"approvalRequired\\":false,\\"invokers\\":[]}},\\"validation\\":{\\"quorum\\":0.5,\\"validators\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"]}},{\\"approval\\":{\\"approvers\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"],\\"quorum\\":0.5},\\"id\\":\\"Test\\",\\"invokation\\":{\\"all\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"external\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"owner\\":{\\"allowance\\":true,\\"approvalRequired\\":false},\\"set\\":{\\"allowance\\":false,\\"approvalRequired\\":false,\\"invokers\\":[]}},\\"validation\\":{\\"quorum\\":0.5,\\"validators\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"]}}],\\"schemas\\":[{\\"content\\":{\\"additionalProperties\\":false,\\"properties\\":{\\"batch\\":{\\"additionalProperties\\":false,\\"properties\\":{\\"origin\\":{\\"type\\":\\"string\\"},\\"weight\\":{\\"minimum\\":0,\\"type\\":\\"number\\"}},\\"required\\":[\\"weight\\",\\"origin\\"],\\"type\\":\\"object\\"},\\"location\\":{\\"type\\":\\"string\\"},\\"temperature\\":{\\"type\\":\\"integer\\"}},\\"required\\":[\\"temperature\\",\\"location\\",\\"batch\\"],\\"type\\":\\"object\\"},\\"id\\":\\"Test\\",\\"tags\\":{}}]}"}}},"request_id":"JQr8oW0CqCoUNWtU-CYBcK5Wn6s_T3We0oleOzls1NzU","timestamp":1673972899640,"subject_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","sn":0}\n')),(0,r.kt)("p",null,"If everything worked correctly we should see a similar output in the terminals of our nodes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-0 Output. Governance Owner"',title:'"Node-0',"Output.":!0,Governance:!0,'Owner"':!0},'...\n[2023-01-17T16:28:19Z INFO  protocol::command_head_manager::inner_manager] Subject JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y event 0 signed\n[2023-01-17T16:28:19Z INFO  protocol::command_head_manager::inner_manager] Subject JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y created\n[2023-01-17T16:28:19Z INFO  rest::handlers] data: Ok(RequestData { request: Create(CreateRequest { governance_id: DigestIdentifier { derivator: Blake3_256, digest: [] }, schema_id: "governance", namespace: "", payload: Json("{\\"members\\":[{\\"description\\":\\"Headquarters in 1\\",\\"id\\":\\"Company-1\\",\\"key\\":\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"tags\\":{}},{\\"description\\":\\"Headquarters in 2\\",\\"id\\":\\"Company-2\\",\\"key\\":\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"tags\\":{}},{\\"description\\":\\"Headquarters in 3\\",\\"id\\":\\"Company-3\\",\\"key\\":\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\",\\"tags\\":{}}],\\"policies\\":[{\\"approval\\":{\\"approvers\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"],\\"quorum\\":0.5},\\"id\\":\\"governance\\",\\"invokation\\":{\\"all\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"external\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"owner\\":{\\"allowance\\":true,\\"approvalRequired\\":false},\\"set\\":{\\"allowance\\":false,\\"approvalRequired\\":false,\\"invokers\\":[]}},\\"validation\\":{\\"quorum\\":0.5,\\"validators\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"]}},{\\"approval\\":{\\"approvers\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"],\\"quorum\\":0.5},\\"id\\":\\"Test\\",\\"invokation\\":{\\"all\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"external\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"owner\\":{\\"allowance\\":true,\\"approvalRequired\\":false},\\"set\\":{\\"allowance\\":false,\\"approvalRequired\\":false,\\"invokers\\":[]}},\\"validation\\":{\\"quorum\\":0.5,\\"validators\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"]}}],\\"schemas\\":[{\\"content\\":{\\"additionalProperties\\":false,\\"properties\\":{\\"batch\\":{\\"additionalProperties\\":false,\\"properties\\":{\\"origin\\":{\\"type\\":\\"string\\"},\\"weight\\":{\\"minimum\\":0,\\"type\\":\\"number\\"}},\\"required\\":[\\"weight\\",\\"origin\\"],\\"type\\":\\"object\\"},\\"location\\":{\\"type\\":\\"string\\"},\\"temperature\\":{\\"type\\":\\"integer\\"}},\\"required\\":[\\"temperature\\",\\"location\\",\\"batch\\"],\\"type\\":\\"object\\"},\\"id\\":\\"Test\\",\\"tags\\":{}}]}") }), request_id: "JQr8oW0CqCoUNWtU-CYBcK5Wn6s_T3We0oleOzls1NzU", timestamp: 1673972899640, subject_id: Some("JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y"), sn: Some(0) })\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-1 Output."',title:'"Node-1','Output."':!0},"...\n[2023-01-17T16:28:19Z INFO  protocol::command_head_manager::inner_manager] Subject JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y event 0 signed\n[2023-01-17T16:28:19Z INFO  protocol::command_head_manager::inner_manager] Subject JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y event 0 signed\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-2 Output."',title:'"Node-2','Output."':!0},"...\n[2023-01-17T16:28:22Z INFO  protocol::command_head_manager::inner_manager] Subject JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y event 0 signed\n[2023-01-17T16:28:22Z INFO  protocol::command_head_manager::inner_manager] Subject JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y event 0 signed\n")),(0,r.kt)("h2",{id:"create-a-subject"},"Create a subject"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"To create a subject, we will use the ",(0,r.kt)("strong",{parentName:"p"},"create_subject.sh")," script. When running this script, we will be prompted for the following information:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"number ID"))," from the node we want to create the subject. For the example it will be number ",(0,r.kt)("inlineCode",{parentName:"p"},"2"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"governance ID"))," of the governance in which we want to create the subject. It is specified at the output's end of the previous script executed. For the example it was:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'... "subject_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y" ...\n')),(0,r.kt)("admonition",{parentName:"li",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"subject_id")," you will get will differ from the one displayed in the example."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"temperature"))," at which the product is stored.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"location"))," where the product is located.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"weight"))," of the product.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"origin"))," of the product."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Executing create_subject.sh for Node 2"',title:'"Executing',"create_subject.sh":!0,for:!0,Node:!0,'2"':!0},'    $ ./create_subject.sh \n    Requesting port.\n    Enter the number ID of the node on which you want to create the subject: 2\n\n    Requesting governance.\n    Enter the ID of the governance in which you want to create the subject (example: J1ZZ57u4PpvTl3apJ0BQrRFrQ1ftMC4XXg-kd9CkZC3E): JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y\n\n    Requesting product temperature. \n    Enter the temperature at which the product is stored (example: 30): 20\n\n    Requesting product location. \n    Enter the location where the product is located (example: Spain): Portugal\n\n    Requesting product weight.\n    Enter product weight (example: 33): 30\n\n    Requesting product origin. \n    Enter the product origin (example: Spain): France\n\n    Response: {"request":{"Create":{"governance_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","schema_id":"Test","namespace":"","payload":{"Json":"{\\"batch\\":{\\"origin\\":\\"France\\",\\"weight\\":30},\\"location\\":\\"Portugal\\",\\"temperature\\":20}"}}},"request_id":"JWT_FVf79PSoeorsV4Hqekn44TXMtME_F2azE_82aGH8","timestamp":1673973038997,"subject_id":"JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ","sn":0}\n')),(0,r.kt)("p",null,"If everything went correctly, you will have an output similar to the following in your terminals running the nodes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-0 Output"',title:'"Node-0','Output"':!0},"...\n[2023-01-17T16:30:39Z INFO  protocol::command_head_manager::inner_manager] Subject JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ event 0 signed\n[2023-01-17T16:30:39Z INFO  protocol::command_head_manager::inner_manager] Subject JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ event 0 signed\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-1 Output"',title:'"Node-1','Output"':!0},"...\n[2023-01-17T16:30:39Z INFO  protocol::command_head_manager::inner_manager] Subject JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ event 0 signed\n[2023-01-17T16:30:39Z INFO  protocol::command_head_manager::inner_manager] Subject JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ event 0 signed\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-2 Output. Subject Owner"',title:'"Node-2',"Output.":!0,Subject:!0,'Owner"':!0},'...\n[2023-01-17T16:30:39Z INFO  protocol::command_head_manager::inner_manager] Subject JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ event 0 signed\n[2023-01-17T16:30:39Z INFO  protocol::command_head_manager::inner_manager] Subject JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ created\n[2023-01-17T16:30:39Z INFO  rest::handlers] data: Ok(RequestData { request: Create(CreateRequest { governance_id: DigestIdentifier { derivator: Blake3_256, digest: [173, 128, 43, 83, 78, 109, 192, 178, 199, 178, 217, 40, 211, 32, 43, 238, 64, 1, 133, 206, 58, 33, 17, 153, 156, 150, 21, 202, 84, 83, 103, 198] }, schema_id: "Test", namespace: "", payload: Json("{\\"batch\\":{\\"origin\\":\\"France\\",\\"weight\\":30},\\"location\\":\\"Portugal\\",\\"temperature\\":20}") }), request_id: "JWT_FVf79PSoeorsV4Hqekn44TXMtME_F2azE_82aGH8", timestamp: 1673973038997, subject_id: Some("JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ"), sn: Some(0) })\n')),(0,r.kt)("h2",{id:"create-an-event"},"Create an event"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"To create an event, we will use the ",(0,r.kt)("strong",{parentName:"p"},"create_event.sh")," script. When running this script, we will be prompted for the following information:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"number ID"))," from the node we want to create the subject. For the example it will be number ",(0,r.kt)("inlineCode",{parentName:"li"},"2"),"."),(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"subject ID"))," of the subject to which we want to create an event. It's specified at the output's end of the previous executed script.For the example it was:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    ... "subject_id":"JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ"...\n')),(0,r.kt)("admonition",{parentName:"li",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"subject_id")," you will get will differ from the one displayed in the example."))),(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"temperature"))," at which the product is stored."),(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"location"))," where the product is located."),(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"weight"))," of the product."),(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"origin"))," of the product.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Creating event from Node 2"',title:'"Creating',event:!0,from:!0,Node:!0,'2"':!0},'    $ ./create_event.sh \n    Requesting port.\n    Enter the number ID of the node from which you want to perform the event: 2\n\n    Requesting subject. \n    Enter the ID of the subject to which you want to perform an event (example: Jjvs-Kk5FHRVwfktXEiH7y12CYZmV3sSBEyxwzECVA9Y): JPnjBHk35OmYM-iljWlrv0Xd7a6UzdavM6lZlwG6LkEI\n\n    Requesting product temperature. \n    Enter the temperature at which the product is stored (example: 30): 7\n\n    Requesting product location: \n    Enter the location where the product is located (example: Spain): Spain\n\n    Requesting product weight. \n    Enter product weight (example: 33): 30\n\n    Requesting product origin. \n    Enter the product origin (example: Spain): Spain\n\n    Response:\n    {"request":{"State":{"subject_id":"JZLfIMPpzfcvEky_Inlzt1EpIGqokvNOp1D6-SrRp78E","payload":{"Json":"{\\"batch\\":{\\"origin\\":\\"Spain\\",\\"weight\\":33},\\"location\\":\\"Spain\\",\\"temperature\\":30}"}}},"request_id":"JubI7DkNETG32kzNVq3Qsv6kIA4_NTE3NazPiEKJwtLI","timestamp":1673892304209,"subject_id":"JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ","sn":1}\n')),(0,r.kt)("p",null,"If everything went correctly, you will have an output similar to the following in your terminals running the nodes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-0 Output"',title:'"Node-0','Output"':!0},"...\n[2023-01-17T16:33:13Z INFO  protocol::command_head_manager::inner_manager] Subject JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ event 1 signed\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-1 Output"',title:'"Node-1','Output"':!0},"...\n[2023-01-17T16:33:13Z INFO  protocol::command_head_manager::inner_manager] Subject JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ event 1 signed\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-2 Output. Subject Owner"',title:'"Node-2',"Output.":!0,Subject:!0,'Owner"':!0},'...\n[2023-01-17T16:33:13Z INFO  protocol::command_head_manager::inner_manager] Subject JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ event 1 signed\n[2023-01-17T16:33:13Z INFO  protocol::command_head_manager::inner_manager] Subject JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ event 1 created\n[2023-01-17T16:33:13Z INFO  rest::handlers] data: Ok(RequestData { request: State(StateRequest { subject_id: DigestIdentifier { derivator: Blake3_256, digest: [62, 120, 193, 30, 77, 249, 58, 102, 12, 250, 41, 99, 90, 90, 239, 209, 119, 123, 107, 165, 51, 117, 171, 204, 234, 86, 101, 192, 110, 139, 144, 66] }, payload: Json("{\\"batch\\":{\\"origin\\":\\"Spain\\",\\"weight\\":30},\\"location\\":\\"Spain\\",\\"temperature\\":7}") }), request_id: "JSbYT3cgRgT8Svh8V3sDmxn01QAlFeDmg00A9bmMv6vY", timestamp: 1673969593828, subject_id: Some("JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ"), sn: Some(1) })\n')),(0,r.kt)("h2",{id:"create-more-subjects"},"Create more subjects"),(0,r.kt)("p",null,"Until now we have created a subject that model a food batch . TAPLE allows us to create more subjects dynamically. Lets create more subjects by repeating steps from ",(0,r.kt)("a",{parentName:"p",href:"/taple-docsite/docs/0.1/build/quickstart#create-a-subject"},'"Create a subject"'),":"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create subject:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Creating subject from Node 1"',title:'"Creating',subject:!0,from:!0,Node:!0,'1"':!0},'$ ./create_subject.sh \nRequesting port.\nEnter the number ID of the node on which you want to create the subject: 1\n\nRequesting governance.\nEnter the ID of the governance in which you want to create the subject (example: J1ZZ57u4PpvTl3apJ0BQrRFrQ1ftMC4XXg-kd9CkZC3E): JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y\n\nRequesting product temperature.\nEnter the temperature at which the product is stored (example: 30): 30\n\nRequesting product location.\nEnter the location where the product is located (example: Spain): Spain\n\nRequesting product weight.\nEnter product weight (example: 33): 33\n\nRequesting product origin.\nEnter the product origin (example: Spain): Spain\n\nResponse: {"request":{"Create":{"governance_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","schema_id":"Test","namespace":"","payload":{"Json":"{\\"batch\\":{\\"origin\\":\\"Spain\\",\\"weight\\":33},\\"location\\":\\"Spain\\",\\"temperature\\":30}"}}},"request_id":"JSohR7uWstwQd5j4hx8hDccb3FKN_hnmCoGHrm79h_wk","timestamp":1673973188427,"subject_id":"J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4","sn":0}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update subject state:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Updating subject from Node 1"',title:'"Updating',subject:!0,from:!0,Node:!0,'1"':!0},'$ ./create_event.sh \nRequesting port.\nEnter the number ID of the node from which you want to perform the event: 1\n\nRequesting subject.\nEnter the ID of the subject to which you want to perform an event (example: Jjvs-Kk5FHRVwfktXEiH7y12CYZmV3sSBEyxwzECVA9Y): J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4\n\nRequesting product temperature.\nEnter the temperature at which the product is stored (example: 30): 0\n\nRequesting product location.\nEnter the location where the product is located (example: Spain): England\n\nRequesting product weight.\nEnter product weight (example: 33): 0\n\nRequesting product origin.\nEnter the product origin (example: Spain): Spain\n\nResponse:\n{"request":{"State":{"subject_id":"J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4","payload":{"Json":"{\\"batch\\":{\\"origin\\":\\"Spain\\",\\"weight\\":0},\\"location\\":\\"England\\",\\"temperature\\":0}"}}},"request_id":"JRllKPd-4ONa7iDTEVUvLlNVMsRpAQjIRQTasq7RbdEI","timestamp":1673973254635,"subject_id":"J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4","sn":1}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Check node terminals output:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-0 Output"',title:'"Node-0','Output"':!0},"...\n[2023-01-17T16:35:39Z INFO  protocol::command_head_manager::inner_manager] Subject J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4 event 0 signed\n[2023-01-17T16:35:39Z INFO  protocol::command_head_manager::inner_manager] Subject J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4 event 0 signed\n[2023-01-17T16:36:35Z INFO  protocol::command_head_manager::inner_manager] Subject J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4 event 1 signed\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-1 Output. Subject Owner"',title:'"Node-1',"Output.":!0,Subject:!0,'Owner"':!0},'...\n[2023-01-17T16:35:39Z INFO  protocol::command_head_manager::inner_manager] Subject J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4 event 0 signed\n[2023-01-17T16:35:39Z INFO  protocol::command_head_manager::inner_manager] Subject J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4 created\n[2023-01-17T16:35:39Z INFO  rest::handlers] data: Ok(RequestData { request: Create(CreateRequest { governance_id: DigestIdentifier { derivator: Blake3_256, digest: [173, 128, 43, 83, 78, 109, 192, 178, 199, 178, 217, 40, 211, 32, 43, 238, 64, 1, 133, 206, 58, 33, 17, 153, 156, 150, 21, 202, 84, 83, 103, 198] }, schema_id: "Test", namespace: "", payload: Json("{\\"batch\\":{\\"origin\\":\\"Spain\\",\\"weight\\":33},\\"location\\":\\"Spain\\",\\"temperature\\":30}") }), request_id: "JSohR7uWstwQd5j4hx8hDccb3FKN_hnmCoGHrm79h_wk", timestamp: 1673973188427, subject_id: Some("J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4"), sn: Some(0) })\n[2023-01-17T16:36:35Z INFO  protocol::command_head_manager::inner_manager] Subject J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4 event 1 signed\n[2023-01-17T16:36:35Z INFO  protocol::command_head_manager::inner_manager] Subject J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4 event 1 created\n[2023-01-17T16:36:35Z INFO  rest::handlers] data: Ok(RequestData { request: State(StateRequest { subject_id: DigestIdentifier { derivator: Blake3_256, digest: [62, 120, 193, 30, 77, 249, 58, 102, 12, 250, 41, 99, 90, 90, 239, 209, 119, 123, 107, 165, 51, 117, 171, 204, 234, 86, 101, 192, 110, 139, 144, 66] }, payload: Json("{\\"batch\\":{\\"origin\\":\\"Spain\\",\\"weight\\":30},\\"location\\":\\"Spain\\",\\"temperature\\":7}") }), request_id: "JRllKPd-4ONa7iDTEVUvLlNVMsRpAQjIRQTasq7RbdEI", timestamp: 1673973254635, subject_id: Some("J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4"), sn: Some(1) })\n')),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Node-2 Output."',title:'"Node-2','Output."':!0},"...\n[2023-01-17T16:35:39Z INFO  protocol::command_head_manager::inner_manager] Subject J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4 event 0 signed\n[2023-01-17T16:35:39Z INFO  protocol::command_head_manager::inner_manager] Subject J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4 event 0 signed\n[2023-01-17T16:36:35Z INFO  protocol::command_head_manager::inner_manager] Subject J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4 event 1 signed\n")))),(0,r.kt)("h2",{id:"display-subjects-of-a-node"},"Display subjects of a node"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"This step is useful to validate that the network is working, and everybody has the same copy of the microledger. To visualize the subjects contained in a node, we can make use of the ",(0,r.kt)("strong",{parentName:"p"},"get_subjects.sh")," script, which will ask us for the port of the node we want to see the subjects of."),(0,r.kt)("p",null,"If everything went correctly, you will have an output similar to the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="get_subjects.sh . Node 0"',title:'"get_subjects.sh',".":!0,Node:!0,'0"':!0},'    $ ./get_subjects.sh\n    Requesting port. \n    Enter the number ID of the node you want to check subjects on: 0\n\n    Response:\n    [{"subject_id":"J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4","governance_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","sn":1,"public_key":"EeYrJkISQP2RallGct7HXhqAxSo4LRnMtnW0vUWodoPA","namespace":"","schema_id":"Test","owner":"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E","properties":"{\\"batch\\":{\\"origin\\":\\"Spain\\",\\"weight\\":0},\\"location\\":\\"England\\",\\"temperature\\":0}"},{"subject_id":"JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ","governance_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","sn":0,"public_key":"EZxOq58lef5BIoC-ji4KZjkzjqxLJe6z2DGyAGLNmqqw","namespace":"","schema_id":"Test","owner":"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E","properties":"{\\"batch\\":{\\"origin\\":\\"France\\",\\"weight\\":30},\\"location\\":\\"Portugal\\",\\"temperature\\":20}"},{"subject_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","governance_id":"","sn":0,"public_key":"EV7y-hRryeYuzW1FCjuwSyuUe97ojiWzDiAn-xM1Elmc","namespace":"","schema_id":"governance","owner":"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y","properties":"{\\"members\\":[{\\"description\\":\\"Headquarters in 1\\",\\"id\\":\\"Company-1\\",\\"key\\":\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"tags\\":{}},{\\"description\\":\\"Headquarters in 2\\",\\"id\\":\\"Company-2\\",\\"key\\":\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"tags\\":{}},{\\"description\\":\\"Headquarters in 3\\",\\"id\\":\\"Company-3\\",\\"key\\":\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\",\\"tags\\":{}}],\\"policies\\":[{\\"approval\\":{\\"approvers\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"],\\"quorum\\":0.5},\\"id\\":\\"governance\\",\\"invokation\\":{\\"all\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"external\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"owner\\":{\\"allowance\\":true,\\"approvalRequired\\":false},\\"set\\":{\\"allowance\\":false,\\"approvalRequired\\":false,\\"invokers\\":[]}},\\"validation\\":{\\"quorum\\":0.5,\\"validators\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"]}},{\\"approval\\":{\\"approvers\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"],\\"quorum\\":0.5},\\"id\\":\\"Test\\",\\"invokation\\":{\\"all\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"external\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"owner\\":{\\"allowance\\":true,\\"approvalRequired\\":false},\\"set\\":{\\"allowance\\":false,\\"approvalRequired\\":false,\\"invokers\\":[]}},\\"validation\\":{\\"quorum\\":0.5,\\"validators\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"]}}],\\"schemas\\":[{\\"content\\":{\\"additionalProperties\\":false,\\"properties\\":{\\"batch\\":{\\"additionalProperties\\":false,\\"properties\\":{\\"origin\\":{\\"type\\":\\"string\\"},\\"weight\\":{\\"minimum\\":0,\\"type\\":\\"number\\"}},\\"required\\":[\\"weight\\",\\"origin\\"],\\"type\\":\\"object\\"},\\"location\\":{\\"type\\":\\"string\\"},\\"temperature\\":{\\"type\\":\\"integer\\"}},\\"required\\":[\\"temperature\\",\\"location\\",\\"batch\\"],\\"type\\":\\"object\\"},\\"id\\":\\"Test\\",\\"tags\\":{}}]}"}]\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="get_subjects.sh . Node 1"',title:'"get_subjects.sh',".":!0,Node:!0,'1"':!0},'    $ ./get_subjects.sh\n    Requesting port. \n    Enter the number ID of the node you want to check subjects on: 1\n\n    Response:\n    [{"subject_id":"J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4","governance_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","sn":1,"public_key":"EeYrJkISQP2RallGct7HXhqAxSo4LRnMtnW0vUWodoPA","namespace":"","schema_id":"Test","owner":"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E","properties":"{\\"batch\\":{\\"origin\\":\\"Spain\\",\\"weight\\":0},\\"location\\":\\"England\\",\\"temperature\\":0}"},{"subject_id":"JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ","governance_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","sn":0,"public_key":"EZxOq58lef5BIoC-ji4KZjkzjqxLJe6z2DGyAGLNmqqw","namespace":"","schema_id":"Test","owner":"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E","properties":"{\\"batch\\":{\\"origin\\":\\"France\\",\\"weight\\":30},\\"location\\":\\"Portugal\\",\\"temperature\\":20}"},{"subject_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","governance_id":"","sn":0,"public_key":"EV7y-hRryeYuzW1FCjuwSyuUe97ojiWzDiAn-xM1Elmc","namespace":"","schema_id":"governance","owner":"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y","properties":"{\\"members\\":[{\\"description\\":\\"Headquarters in 1\\",\\"id\\":\\"Company-1\\",\\"key\\":\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"tags\\":{}},{\\"description\\":\\"Headquarters in 2\\",\\"id\\":\\"Company-2\\",\\"key\\":\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"tags\\":{}},{\\"description\\":\\"Headquarters in 3\\",\\"id\\":\\"Company-3\\",\\"key\\":\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\",\\"tags\\":{}}],\\"policies\\":[{\\"approval\\":{\\"approvers\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"],\\"quorum\\":0.5},\\"id\\":\\"governance\\",\\"invokation\\":{\\"all\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"external\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"owner\\":{\\"allowance\\":true,\\"approvalRequired\\":false},\\"set\\":{\\"allowance\\":false,\\"approvalRequired\\":false,\\"invokers\\":[]}},\\"validation\\":{\\"quorum\\":0.5,\\"validators\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"]}},{\\"approval\\":{\\"approvers\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"],\\"quorum\\":0.5},\\"id\\":\\"Test\\",\\"invokation\\":{\\"all\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"external\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"owner\\":{\\"allowance\\":true,\\"approvalRequired\\":false},\\"set\\":{\\"allowance\\":false,\\"approvalRequired\\":false,\\"invokers\\":[]}},\\"validation\\":{\\"quorum\\":0.5,\\"validators\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"]}}],\\"schemas\\":[{\\"content\\":{\\"additionalProperties\\":false,\\"properties\\":{\\"batch\\":{\\"additionalProperties\\":false,\\"properties\\":{\\"origin\\":{\\"type\\":\\"string\\"},\\"weight\\":{\\"minimum\\":0,\\"type\\":\\"number\\"}},\\"required\\":[\\"weight\\",\\"origin\\"],\\"type\\":\\"object\\"},\\"location\\":{\\"type\\":\\"string\\"},\\"temperature\\":{\\"type\\":\\"integer\\"}},\\"required\\":[\\"temperature\\",\\"location\\",\\"batch\\"],\\"type\\":\\"object\\"},\\"id\\":\\"Test\\",\\"tags\\":{}}]}"}]\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="get_subjects.sh . Node 2"',title:'"get_subjects.sh',".":!0,Node:!0,'2"':!0},'    $ ./get_subjects.sh\n    Requesting port. \n    Enter the number ID of the node you want to check subjects on: 2\n\n    Response:\n    [{"subject_id":"J1_Uw6dWAMmOpK6uJxJ0gmXpr8x-v6Of6tFDxQUX5Eu4","governance_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","sn":1,"public_key":"EeYrJkISQP2RallGct7HXhqAxSo4LRnMtnW0vUWodoPA","namespace":"","schema_id":"Test","owner":"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E","properties":"{\\"batch\\":{\\"origin\\":\\"Spain\\",\\"weight\\":0},\\"location\\":\\"England\\",\\"temperature\\":0}"},{"subject_id":"JOG5n5ajSAizYBD78py6CqzgYSBz49w6w569SztPnNkQ","governance_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","sn":0,"public_key":"EZxOq58lef5BIoC-ji4KZjkzjqxLJe6z2DGyAGLNmqqw","namespace":"","schema_id":"Test","owner":"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E","properties":"{\\"batch\\":{\\"origin\\":\\"France\\",\\"weight\\":30},\\"location\\":\\"Portugal\\",\\"temperature\\":20}"},{"subject_id":"JrYArU05twLLHstko0yAr7kABhc46IRGZnJYVylRTZ8Y","governance_id":"","sn":0,"public_key":"EV7y-hRryeYuzW1FCjuwSyuUe97ojiWzDiAn-xM1Elmc","namespace":"","schema_id":"governance","owner":"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y","properties":"{\\"members\\":[{\\"description\\":\\"Headquarters in 1\\",\\"id\\":\\"Company-1\\",\\"key\\":\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"tags\\":{}},{\\"description\\":\\"Headquarters in 2\\",\\"id\\":\\"Company-2\\",\\"key\\":\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"tags\\":{}},{\\"description\\":\\"Headquarters in 3\\",\\"id\\":\\"Company-3\\",\\"key\\":\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\",\\"tags\\":{}}],\\"policies\\":[{\\"approval\\":{\\"approvers\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"],\\"quorum\\":0.5},\\"id\\":\\"governance\\",\\"invokation\\":{\\"all\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"external\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"owner\\":{\\"allowance\\":true,\\"approvalRequired\\":false},\\"set\\":{\\"allowance\\":false,\\"approvalRequired\\":false,\\"invokers\\":[]}},\\"validation\\":{\\"quorum\\":0.5,\\"validators\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"]}},{\\"approval\\":{\\"approvers\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"],\\"quorum\\":0.5},\\"id\\":\\"Test\\",\\"invokation\\":{\\"all\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"external\\":{\\"allowance\\":false,\\"approvalRequired\\":false},\\"owner\\":{\\"allowance\\":true,\\"approvalRequired\\":false},\\"set\\":{\\"allowance\\":false,\\"approvalRequired\\":false,\\"invokers\\":[]}},\\"validation\\":{\\"quorum\\":0.5,\\"validators\\":[\\"EIahN95FYIOO5BwbEuGQ6VPFZTPTTjkrCTu3VFGM7O2Y\\",\\"EJbgafSSzx3QZwem79ypwxp8P4Q2kcrMZtdpzgPF1d3E\\",\\"EljceLTouD478TdoKVhOsSkfX6DBQ7G6M8yD0ChXhl4E\\"]}}],\\"schemas\\":[{\\"content\\":{\\"additionalProperties\\":false,\\"properties\\":{\\"batch\\":{\\"additionalProperties\\":false,\\"properties\\":{\\"origin\\":{\\"type\\":\\"string\\"},\\"weight\\":{\\"minimum\\":0,\\"type\\":\\"number\\"}},\\"required\\":[\\"weight\\",\\"origin\\"],\\"type\\":\\"object\\"},\\"location\\":{\\"type\\":\\"string\\"},\\"temperature\\":{\\"type\\":\\"integer\\"}},\\"required\\":[\\"temperature\\",\\"location\\",\\"batch\\"],\\"type\\":\\"object\\"},\\"id\\":\\"Test\\",\\"tags\\":{}}]}"}]\n')),(0,r.kt)("h2",{id:"stopping-nodes"},"Stopping Nodes"),(0,r.kt)("p",null,"Once you have finished the tutorial, if you wish, you can make use of the script named ",(0,r.kt)("strong",{parentName:"p"},"stop_nodes.sh")," which will stop and delete the containers used for the tutorial."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ ./stop_nodes.sh \na8afb08b0e6f\n4a4b3f776211\n46f2a1d6b8be\nContainers stopped and disposed of correctly\n")))}c.isMDXComponent=!0}}]);