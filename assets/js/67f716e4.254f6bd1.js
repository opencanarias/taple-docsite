"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[5599],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=l(t),u=o,m=h["".concat(c,".").concat(u)]||h[u]||p[u]||r;return t?a.createElement(m,i(i({ref:n},d),{},{components:t})):a.createElement(m,i({ref:n},d))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=h;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},50342:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=t(87462),o=(t(67294),t(3905));const r={},i="Adding a second member",s={unversionedId:"build/minimal-network/adding-a-second-member",id:"build/minimal-network/adding-a-second-member",title:"Adding a second member",description:"To add a second member, we can repeat the previous step but slightly change the body of the request. To do this, I will first run taple-keygen again to create a second cryptographic material that identifies the second member:",source:"@site/docs/build/minimal-network/4-adding-a-second-member.md",sourceDirName:"build/minimal-network",slug:"/build/minimal-network/adding-a-second-member",permalink:"/docs/next/build/minimal-network/adding-a-second-member",draft:!1,tags:[],version:"current",lastUpdatedAt:1697702535,formattedLastUpdatedAt:"Oct 19, 2023",sidebarPosition:4,frontMatter:{},sidebar:"buildSidebar",previous:{title:"Creating the governance",permalink:"/docs/next/build/minimal-network/creating-governance"},next:{title:"Adding a third member",permalink:"/docs/next/build/minimal-network/adding-a-third-member"}},c={},l=[{value:"Raise the second node",id:"raise-the-second-node",level:2},{value:"Modify the governance",id:"modify-the-governance",level:2}],d={toc:l};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"adding-a-second-member"},"Adding a second member"),(0,o.kt)("p",null,"To add a second member, we can repeat the previous step but slightly change the body of the request. To do this, I will first run taple-keygen again to create a second cryptographic material that identifies the second member:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"PRIVATE KEY ED25519 (HEX): 388e07385cfd8871f990fe05f82610af1989f7abf5d4e42884c8337498086ba0\nCONTROLLER ID ED25519: E6AL_cLzXRIAnc3Hy2oX5K8CgnzPXPmyL1KyDo36DNdM\nPeerID: 12D3KooWRS3QVwqBtNp7rUCG4SF3nBrinQqJYC1N5qc1Wdr4jrze\n")),(0,o.kt)("p",null,"The new request would be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "request": {\n    "Fact": {\n      "subject_id": "{{governance_id}}",\n      "payload": {\n          "Patch": {\n              "data": [\n                {\n                    "op": "add",\n                    "path": "/members/1",\n                    "value": {\n                    "id": "E6AL_cLzXRIAnc3Hy2oX5K8CgnzPXPmyL1KyDo36DNdM",\n                    "name": "Tutorial2"\n                    }\n                }\n            ]\n          }\n      }\n    }\n  }\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --silent \'http://localhost:3000/api/event-requests\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "request": {\n        "Fact": {\n            "subject_id": "Jz6RNP5F7wNoSeCH65MXYuNVInyuhLvjKb5IpRiH_J6M",\n            "payload": {\n                "Patch": {\n                    "data": [\n                        {\n                            "op": "add",\n                            "path": "/members/1",\n                            "value": {\n                                "id": "E6AL_cLzXRIAnc3Hy2oX5K8CgnzPXPmyL1KyDo36DNdM",\n                                "name": "Tutorial2"\n                            }\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}\'\n')),(0,o.kt)("p",null,"We must again approve the new request as in the previous case."),(0,o.kt)("h2",{id:"raise-the-second-node"},"Raise the second node"),(0,o.kt)("p",null,"The first node is going to be sending the events of the governance subject to the controller ",(0,o.kt)("strong",{parentName:"p"},"E6AL_cLzXRIAnc3Hy2oX5K8CgnzPXPmyL1KyDo36DNdM"),", whose PeerId (identification in LibP2P, the communication library) is ",(0,o.kt)("strong",{parentName:"p"},"12D3KooWRS3QVwqBtNp7rUCG4SF3nBrinQqJYC1N5qc1Wdr4jrze"),". Unfortunately, it will not find it on its network because they are not connected, so we will proceed to raise the second node and connect it to the first:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 3001:3000 -p 50001:50000 \\\n-e TAPLE_ID_PRIVATE_KEY=388e07385cfd8871f990fe05f82610af1989f7abf5d4e42884c8337498086ba0 \\\n-e TAPLE_HTTP=true \\\n-e TAPLE_NETWORK_KNOWN_NODE=/ip4/172.17.0.1/tcp/50000/p2p/12D3KooWLXexpg81PjdjnrhmHUxN7U5EtfXJgr9cahei1SJ9Ub3B \\\n-e TAPLE_NETWORK_LISTEN_ADDR=/ip4/0.0.0.0/tcp/50000 \\\nopencanarias/taple-client:0.3\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Pay attention to the IP address specified in TAPLE_NETWORK_KNOWN_NODE as it may be different in your case. You should specify an IP that allows the second container to communicate with the first one.")),(0,o.kt)("p",null,"Now that it is up and finds the others from a bootstrap on ",(0,o.kt)("strong",{parentName:"p"},"TAPLE_NETWORK_KNOWN_NODE"),". Events from the governance will begin to arrive at the second node, although they will not yet be saved in its database. This is because governances always have to be pre-authorized to allow the reception of their events. For this, the endpoint ",(0,o.kt)("strong",{parentName:"p"},"/api/allowed-subjects/{{governance_id}}")," and the ",(0,o.kt)("strong",{parentName:"p"},"PUT")," method are used. Remember that in this case it must be launched on the second node, which, due to the configuration we have set, will be listening on port 3001 of localhost. The second node will now correctly update with the governance subject."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl --silent --request PUT 'http://localhost:3001/api/allowed-subjects/Jz6RNP5F7wNoSeCH65MXYuNVInyuhLvjKb5IpRiH_J6M' \\\n--header 'Content-Type: application/json' \\\n--data '{\n    \"providers\": []\n}'\n")),(0,o.kt)("p",null,"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{"providers":[]}\n')),(0,o.kt)("h2",{id:"modify-the-governance"},"Modify the governance"),(0,o.kt)("p",null,"As we have seen previously, the governance contract currently only has one method to modify its state, the Patch method. This method includes an object with a data attribute which in turn is an array representing a json-patch. This patch will be applied to the current state of the governance to modify it. Also when making the modification it is checked that the obtained state is valid for a governance, not only by performing the validation with the governance schema itself but also by performing exhaustive checks, such as that there are no repeated members, each defined schema in turn has some policies..."),(0,o.kt)("p",null,"To facilitate obtaining the result we want and generate the specific json-patch we can use the taple-patch tool, included among the ",(0,o.kt)("a",{parentName:"p",href:"/docs/next/learn/client-tools"},"taple-tools"),". This executable is passed the current state and the desired state and generates the corresponding patch after whose application one passes from one to another."),(0,o.kt)("p",null,"and send the request, make the approval etc..."),(0,o.kt)("p",null,"For an example, we will make all the members of the governance approvers, for this we must add the role:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "namespace": "",\n    "role": "APPROVER",\n    "schema": {\n        "ID": "governance"\n    },\n    "who": "MEMBERS"\n}\n')),(0,o.kt)("p",null,"So the json patch that we have to apply will be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "op": "add",\n    "path": "/roles/1",\n    "value": {\n        "namespace": "",\n        "role": "APPROVER",\n        "schema": {\n            "ID": "governance"\n        },\n        "who": "MEMBERS"\n    }\n  }\n]\n')),(0,o.kt)("p",null,"So the body of the request will be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "request": {\n    "Fact": {\n      "subject_id": "{{governance_id}}",\n      "payload": {\n          "Patch": {\n              "data": [\n                {\n                  "op": "add",\n                  "path": "/roles/1",\n                  "value": {\n                      "namespace": "",\n                      "role": "APPROVER",\n                      "schema": {\n                          "ID": "governance"\n                      },\n                      "who": "MEMBERS"\n                  }\n                }\n              ]\n          }\n      }\n    }\n  }\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl --silent \'http://localhost:3000/api/event-requests\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "request": {\n        "Fact": {\n            "subject_id": "Jz6RNP5F7wNoSeCH65MXYuNVInyuhLvjKb5IpRiH_J6M",\n            "payload": {\n                "Patch": {\n                    "data": [\n                        {\n                            "op": "add",\n                            "path": "/roles/1",\n                            "value": {\n                                "namespace": "",\n                                "role": "APPROVER",\n                                "schema": {\n                                    "ID": "governance"\n                                },\n                                "who": "MEMBERS"\n                            }\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}\'\n')),(0,o.kt)("p",null,"Even though the following state says that both are approvers, to calculate the signatories of the different phases the current state of the subject is used, prior to applying the change in the state of this new event that we are creating, so the only approver right now will continue to be the first node for being the owner of the governance, so we must repeat the previous authorization step."))}p.isMDXComponent=!0}}]);