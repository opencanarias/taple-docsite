var searchIndex = JSON.parse('{\
"taple_core":{"doc":"TAPLE is a DLT focused on traceability characterized by â€¦","t":"EEEIEDDNDNNNNINIDEINEDNNNCDDDNDENNNNNNDNNNNNNDNNNNDNNNNNNNNENDNDDNNNDDNNNEDNDNNNNNNNNNNNNNNNNDNNDNDDDNNDNMMMKLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLKKLKLKLKLMMAMKKKMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLAMMAAMMMAMMKLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLKKLKLLKLKLLKLKLLLLLLKLKLMMMMMMMLLLMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMMMMMMMMLLLLLLLMLMMMLLLLMLMMMMALLLMMKMMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLKLAMMMMMMMMLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMDNNDIINGIIEENGLLLLLLLLFLLLLLLLLFLLLLLLLLLLLLLLLLLLKLLKLLKLLFLLLLLKLLLLMMKLLLMMKLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLKLLLLLLLNNNNENNNNNNLLLLLLLLLLLLLLMNNNNEENNNLLLLLLLLLAALLLLLLALLLLLLLLLLLMMMMMMMMMMNNNNNNNNNNNNENNNNNNNNNNNNNNLLLLLLLLLLLLLLLLDLLLLFLLLLLLLLLLLLDIDLLLLLLLLLLLLLKLLLLLLLLLLLDDMLLLLLLLLMLLLLLLLLMLLLLMMLLMMLMMMLLLLMMMMLLLLLLLLLLNDNDDENDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLMMMLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDDLLLLLLLLLLLLLKLLLKLLLMMMALLLLLLMLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLINNNENELLLLLLLLKLLKLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLNNENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNENNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLMMMMMMMAANNNNNENNNNNNNNNNNNNNNENNNENNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMNNNNNDENLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLL","n":["APICommands","Acceptance","ApiError","ApiModuleInterface","ApiResponses","Approval","ApprovalContent","ApprovalInternalError","ApprovalPetitionData","Blake3_256","Blake3_512","Create","CustomError","DatabaseCollection","DatabaseError","DatabaseManager","DatabaseSettings","DbError","Derivable","DeserializeError","DigestDerivator","DigestIdentifier","EOL","Ed25519","EntryNotFound","Error","Evaluation","Event","EventContent","EventCreationError","EventProposal","EventRequestType","EventSigned","ExpectingTransfer","ExpectingTransfer","ExternalRequest","GetAllGovernances","GetAllGovernances","GetAllSubjects","GetAllSubjects","GetAllSubjects","GetApproval","GetApproval","GetApprovals","GetApprovals","GetEventsOfSubject","GetEventsOfSubject","GetEventsOfSubject","GetGovernanceSubjects","GetGovernanceSubjects","GetSingleSubject","GetSingleSubject","GetSingleSubject","GetValidationProof","GetValidationProof","HandleExternalRequest","HandleRequest","HandleRequest","InvalidParameters","KeyDerivator","KeyElementsError","KeyIdentifier","Ko","MemoryManager","NetworkSettings","NewEvent","NewSubject","NoDigestIdentifier","NodeAPI","NodeSettings","NonExistentStatus","NotEnoughPermissions","NotFound","Notification","NotificationHandler","Ok","Proposal","QuroumReached","RequestDeleted","RequestNegativeQuroumReached","RequestQuroumReached","RequestReached","SHA2_256","SHA2_512","SHA3_256","SHA3_512","Secp256k1","SerializeError","SetPreauthorizedSubject","SetPreauthorizedSubjectCompleted","Shutdown","ShutdownCompleted","SignError","SignatureIdentifier","State","SubjectApplyFailed","SubjectData","SubjectSynchronized","Taple","TapleSettings","TimeStamp","Transfer","UnexpectedError","ValidationProof","VoteNotNeeded","acceptance","acceptance","active","add_preauthorize_subject","add_preauthorize_subject","addr","approval_required","approvals","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_signatures","check_signatures","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","content","content","controller_id","create_collection","create_event","create_event","create_governance","create_governance","create_request","create_request","create_subject","create_subject","creator","creator","crypto","database","del","derivation_code","derivative","derivator","derivator","derivator","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","digest_derivator","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","evaluation","evaluation_signatures","event","event_content","event_hash","event_proposal","event_proposal_hash","event_request","event_request","execution","expecting_transfer","expecting_transfer","external_address","external_request","external_request","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_genesis_request","get","get_all_governances","get_all_governances","get_all_subjects","get_all_subjects","get_api","get_approval","get_approval","get_approvals","get_approvals","get_default_settings","get_event_of_subject","get_event_of_subject","get_governance_subjects","get_governance_subjects","get_hash","get_hash","get_hash","get_metadata","get_notification_handler","get_subject","get_subject","get_validation_proof","get_validation_proof","gov_version","governance_id","governance_id","governance_id","governance_version","governance_version","governance_version","hash","hash","hash","hash_event_proporsal","hash_prev_event","identifier","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_similar","iter","json_patch","json_patch","key_derivator","known_nodes","namespace","namespace","namespace","network","new","new","new","new","new","new","new_from_transfer_event","node","now","owner","owner","p2p_port","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","peer_id","preevaluation_hash","prev_event_hash","properties","proposal","protocol","provide","provide","public_key","public_key","public_key","put","quantity","quantity","receive","replication_factor","req_res","schema_id","schema_id","secret_key","seed","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shutdown","shutdown","signature","signature","signature","signature","smartcontracts_directory","sn","sn","sn","sn","source","start","state_hash","state_hash","subject_id","subject_id","subject_id","subject_id","subject_id","subject_public_key","subject_signature","time","timeout","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_rec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","source","source","default_message","default_message","default_message","default_message","default_message","default_message","default_message","default_message","default_message","request_id","request_id","request_id","request_id","sn","sn","sn","subject_id","subject_id","subject_id","subject_id","subject_id","subject_id","subject_id","subject_id","subject_id","BaseKeyPair","Buffer","BufferArray","CryptoBox","DHKE","DSA","Ed25519","Ed25519KeyPair","KeyGenerator","KeyMaterial","KeyPair","Payload","Secp256k1","Secp256k1KeyPair","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_cryptography","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_seed","default","default","deserialize","deserialize","deserialize","deserialize","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_public_key","from_public_key","from_public_key","from_secret_key","from_secret_key","from_secret_key","from_seed","from_seed","from_seed","generate","get_key_derivator","into","into","into","into","key_exchange","key_exchange","key_exchange","new","new","public_key","public_key","public_key_bytes","public_key_bytes","public_key_bytes","public_key_bytes","secret_key","secret_key","secret_key_bytes","secret_key_bytes","secret_key_bytes","secret_key_bytes","serialize","serialize","serialize","serialize","sign","sign","sign","sign","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_str","to_str","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","verify","verify","verify","vzip","vzip","vzip","vzip","AcessPointError","ApiNotYetAvailable","CantReceiveNotification","DatabaseError","Error","InvalidHexString","InvalidKeyPairSpecified","NoMCAvailable","NoNewNotification","PkConflict","SettingsError","borrow","borrow_mut","fmt","fmt","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","source","ApproverResponse","EvaluatorResponse","Event","Event","EventCommand","EventResponse","HigherGovernanceExpected","NoResponse","ValidatorResponse","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","errors","event_completer","fmt","fmt","from","from","into","into","manager","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","approval","evaluation","event_hash","event_request","governance_id","governance_version","json_patch","signature","signature","who_asked","ChannelClosed","ChannelError","CloseNotAuthorized","CreatingPermissionDenied","CryptoError","DatabaseError","ErrorApplyingPatch","ErrorParsingJsonString","ErrorParsingValue","EvaluationOrApprovationInCreationEvent","EventAlreadyInProgress","EventApiChannelNotAvailable","EventError","ExternalGenesisEvent","GenesisInGovUpdate","GovernanceError","InvokePermissionDenied","NoAprovalForEOLEvents","NoAprovalForTransferEvents","NoEvaluationForEOLEvents","NoEvaluationForTransferEvents","SubjectError","SubjectLifeEnd","SubjectNotFound","SubjectNotOwned","WrongEventPhase","WrongGovernanceVersion","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","into","provide","source","to_owned","to_string","try_from","try_into","type_id","vzip","EventCompleter","approver_signatures","borrow","borrow_mut","evaluator_signatures","extend_quorum","from","higher_governance_expected","init","into","new","new_event","new_governance_version","try_from","try_into","type_id","validation_signatures","vzip","EventAPI","EventAPIInterface","EventManager","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","into","into","new","new","send_event_request","send_event_request","start","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EventContent","Metadata","approved","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","creator","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","event_request","fmt","fmt","from","from","governance_id","governance_version","into","into","metadata","namespace","new","owner","previous_hash","schema_id","serialize","serialize","serialize","serialize","sn","state_hash","subject_id","subject_id","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Create","CreateRequest","EOL","EOLRequest","EventRequest","EventRequestType","State","StateRequest","Transfer","TransferRequest","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_signatures","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","governance_id","into","into","into","into","into","into","invokation","namespace","new","public_key","request","schema_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","subject_id","subject_id","subject_id","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Derivable","DigestIdentifier","KeyIdentifier","SignatureIdentifier","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","derivation_code","derivation_code","derivation_code","derivation_code","derivative","derivative","derivative","derivative","derivator","derivator","derivator","derive","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","eq","eq","eq","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","from","from","from","from_serializable","from_serializable_borsh","from_str","from_str","from_str","get_hash","get_hash","get_hash","hash","hash","hash","into","into","into","new","new","new","partial_cmp","partial_cmp","partial_cmp","public_key","serialize","serialize","serialize","serialize","serialize","serialize","signature","to_owned","to_owned","to_owned","to_signature_derivator","to_str","to_str","to_str","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip","Derivator","ECDSAsecp256k1","Ed25519","Ed25519Sha512","KeyDerivator","Secp256k1","SignatureDerivator","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code_len","code_len","code_len","derivative_len","derivative_len","derivative_len","derive","derive","deserialize","deserialize","deserialize","digest","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_str","from_str","get_hash","get_hash","hash","hash","into","into","material_len","material_len","partial_cmp","partial_cmp","serialize","serialize","serialize","to_owned","to_owned","to_signature_derivator","to_str","to_str","to_str","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Blake3_256","Blake3_512","DigestDerivator","SHA2_256","SHA2_512","SHA3_256","SHA3_512","borrow","borrow_mut","clone","clone_into","code_len","derivative_len","deserialize","deserialize","digest","eq","equivalent","fmt","from","from_str","get_hash","hash","into","partial_cmp","serialize","serialize","to_owned","to_str","try_from","try_into","type_id","vzip","Base64DecodingError","DeserializationError","DuplicateEvent","Ed25519Error","Error","EventError","InfalibleError","InvalidIdentifier","KeyPairError","MsgPackDeserialize","MsgPackSerialize","NoSignatureError","OutOfOrder","PayloadError","SchemaNotFoundError","SeedError","SemanticError","SerdeCbor","SerdeJson","SignError","StoreError","SubjectNotFoundError","TapleError","UnknownError","VerificationError","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","source","source","source","source","source","source","source","errors","protocol_message_manager","ApprovalNotNeeded","CantCreateGovernance","ChannelError","ComunnicationClosed","EventAlreadyOnChain","EventCreationError","EventCreationError","EventCreationNotAvailable","EventNotFound","EventRequestVerificationFailed","GovernanceError","GovernanceError","InvalidCaller","InvalidHash","InvalidSetOperation","LedgerChannelClosed","NoOwnerOfSubject","NoSynchronizedSubject","NotOwnerOfSubject","NotValidator","OneshotUnavailable","ProtocolErrors","RequestAlreadyKnown","RequestNotFound","RequestTypeError","ResponseError","SchemaNotFound","SignatureError","SimulationFailed","SubjectBeingValidated","SubjectNotAvailable","SubjectNotAvailable","SubjectNotFound","UnexpectedCommandResponse","UnexpectedLedgerResponse","UnexpectedSN","VoteNotNeeded","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","provide","provide","provide","source","source","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","source","source","source","source","ApprovalMessages","DistributionMessage","EvaluationMessage","EventMessage","LedgerMessages","ProtocolManager","TapleMessages","ValidationMessage","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","fmt","from","from","into","into","new","serialize","start","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Signature","SignatureContent","UniqueSignature","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","content","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","event_content_hash","fmt","fmt","fmt","from","from","from","get_hash","get_hash","hash","hash","into","into","into","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","signature","signature","signer","timestamp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip"],"q":[[0,"taple_core"],[670,"taple_core::ApiError"],[672,"taple_core::Notification"],[697,"taple_core::crypto"],[817,"taple_core::error"],[842,"taple_core::error::Error"],[843,"taple_core::event"],[881,"taple_core::event::EventCommand"],[891,"taple_core::event::errors"],[934,"taple_core::event::event_completer"],[952,"taple_core::event::manager"],[980,"taple_core::event_content"],[1033,"taple_core::event_request"],[1164,"taple_core::identifier"],[1261,"taple_core::identifier::derive"],[1325,"taple_core::identifier::derive::digest"],[1358,"taple_core::identifier::error"],[1403,"taple_core::identifier::error::Error"],[1410,"taple_core::protocol"],[1412,"taple_core::protocol::errors"],[1498,"taple_core::protocol::errors::ProtocolErrors"],[1500,"taple_core::protocol::errors::ResponseError"],[1502,"taple_core::protocol::protocol_message_manager"],[1534,"taple_core::signature"]],"d":["","","Errors that may occur when using the TAPLE API","Trait that allows implementing the interface of a TAPLE â€¦","","","","An error has occurred in the process of creating an event. â€¦","","","","","","","","","Configuration parameters of the database","","Derivable Identifiers","","Enumeration with digest derivator types","Digest based identifier","","","","","","","","","","","An event has been signed","","","","","","","","","","","","","","","","","","","","","","","","","","Invalid parameters have been entered, usually identifiers.","Enumeration with key derivator types","","Key based identifier","","","P2P network configuration parameters of a TAPLE node.","A new event has been generated","A new subject has been generated","","Object that allows interaction with a TAPLE node.","General settings of a TAPLE node.","","","An item of the protocol has not been found, for example, a â€¦","Notifications generated by [NotificationHandler]. These â€¦","Object that allows receiving notifications of the â€¦","","","An event has reached validation quorum","","An event request has been rejected by the approvers","An event request has been accepted by the approvers","A new requesst has been detected","","","","","","","","","","","An error occurred during a signature process","Signature based identifier","","","","A subject has been synchronized","Structure representing a node of a TAPLE network.","Configuration parameters of a TAPLE node divided into â€¦","","","An unexpected error has occurred","","No permissions required or possessed to vote on an event â€¦","","","Indicates if the subject is active or not","","","Multiaddr to consider by the node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the controller ID of the node is available. This â€¦","","Allows adding a new event to the chain of a subject â€¦","","Method for creating governance in the system.","","Allows to generate a voting request in the system. This â€¦","","Allows to create a new subject in the node, being its â€¦","","","Subject creator identifier","This module provides the structs and traits for the â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DigestDerivator to be used for future event and subject â€¦","","","","","","","","","","","","","","","","","","","","","","Possible errors of a TAPLE Node","","","","Contains the data structures related to the content of â€¦","","","","Contains the data structures related to event requests.","","","","","List of bootstrap nodes to connect to.","Allows to make a request to the node from an external â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","It allows to obtain all the subjects that model existing â€¦","","Allows to get all subjects that are known to the current â€¦","","This methods allows to get the API of the node. The API â€¦","","","","","Instance a default settings to start a new Taple Node","Allows to obtain events from a specific subject previously â€¦","","","","","","","","This method allows to get an instance of â€¦","Allows to obtain a specified subject by specifying its â€¦","","","","","","Governance identifier","","","","","","","","","","Identifiers module","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","KeyDerivator to be used by the secret key.","List of bootstrap nodes to connect to.","","","","","","","","","","Main and unique method to create an instance of a TAPLE â€¦","","","","","Subject owner identifier","P2P Port","","","","","Path where the database will be stored","Returns the PeerId of the node is available. This ID is â€¦","","","Current status of the subject","","","","","Returns the public key (bytes format) of the node is â€¦","","Public key of the subject","","","","It forces the object to wait until the arrival of a new â€¦","Percentage of network nodes receiving protocol messages in â€¦","Use Request-Response protocol to send messages throught â€¦","","Identifier of the schema used by the subject and defined â€¦","Secret key to be used by the node","","","","","","","","","","","","","","","","","","","","","","","","","Stops the node, consuming the instance on the fly. This â€¦","","Define the data structures related to signatures","","","","","","","Current sequence number of the subject","","","This method initializes a TAPLE node, generating each of â€¦","","","","","","Subject identifier","","","","","Timeout to be used between protocol iterations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The handler tries to get a notification. If there is none, â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Base for asymmetric key pair","","","Represents asymetric key pair for storage (deprecated: â€¦","Used for Diffieâ€“Hellman key exchange operations","Used for Digital Signature Algorithm (DSA)","","","Collection of methods to initialize a key pair using â€¦","Return key material bytes","Asymmetric key pair","Payloads","","Defines type","","","","","","","","","","","","","","","","","","Creates 32 bytes seed","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates keys from existing public key","","","Generate keys from existing secret key","","","Generates keys deterministically using a given seed","","","Generate key pair","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform key exchange operation","","","Generates random keys","Generates random keys","","","Returns the public key bytes as slice","","","","","","Returns the secret key bytes as slice","","","","","","","","Performs sign operation","","","","Returns bytes from key pair","","","","","","","","Returns String from key pair encoded in base64","Returns String from key pair encoded in base64","","","","","","","","","","","","","Performs verify operation","","","","","","","","","","","","Possible errors that a TAPLE node can generate.  It does â€¦","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Function that is called when a new event request arrives â€¦","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Content of a TAPLE event","Metadata of a TAPLE Event","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derivable Identifiers","Digest based identifier","Key based identifier","Signature based identifier","","","","","","","","","","","","","","","","","","","","","","","","","Print derivation module","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derivator trait","","","","Enumeration with key derivator types","","Enumeration with signature derivator types","","","","","","","","","","","","","","","","","","","","Digest derive","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Enumeration with digest derivator types","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The format, in addition to the signature, includes â€¦","Defines the data used to generate the signature, as well â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,11,0,102,102,40,32,0,11,0,0,0,0,32,0,0,40,82,32,0,0,0,0,11,0,0,27,12,13,12,12,13,0,12,13,12,13,12,13,0,12,13,12,13,0,12,13,12,13,13,12,13,11,0,32,0,30,0,0,27,27,32,0,0,32,11,11,0,0,30,0,27,27,27,27,27,102,102,102,102,82,32,12,13,12,13,11,0,40,32,0,27,0,0,0,40,11,0,11,22,26,28,117,7,18,26,23,62,59,7,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,36,62,59,7,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,36,8,10,7,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,7,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,29,21,8,36,35,117,7,117,7,117,7,117,7,24,28,0,17,34,118,118,1,2,100,17,18,19,20,21,21,22,22,8,8,23,23,24,24,10,10,25,25,26,26,28,29,29,30,30,31,1,19,21,22,8,23,24,10,25,26,29,30,32,21,22,8,23,24,10,25,26,29,30,0,25,25,0,0,24,23,22,0,25,23,117,7,18,117,7,7,11,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,32,36,62,59,7,11,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,36,14,16,8,34,117,7,117,7,36,117,7,117,7,36,117,7,117,7,21,22,30,24,36,117,7,117,7,25,24,28,31,24,26,31,21,22,30,31,25,0,62,59,7,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,36,24,34,25,31,19,18,14,24,28,17,62,23,24,10,25,36,24,17,29,24,28,18,21,22,29,30,20,36,26,24,28,10,0,11,32,36,2,28,34,14,16,59,19,19,24,28,19,19,31,21,21,22,22,8,8,23,23,24,24,10,10,25,25,26,26,28,29,29,30,30,31,117,7,0,100,21,8,19,24,25,28,31,11,36,24,26,15,16,24,28,31,24,10,29,19,27,7,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,11,32,62,59,7,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,36,62,59,7,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,36,59,62,59,7,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,36,62,59,7,11,12,13,14,15,16,17,18,19,20,21,22,8,23,24,10,25,26,27,28,29,30,31,32,36,119,120,121,122,123,124,125,126,127,128,129,126,127,128,129,122,124,125,121,122,123,124,125,126,127,128,129,0,76,76,0,0,0,51,0,0,0,0,0,51,0,51,74,75,76,51,74,75,76,0,51,74,75,76,51,74,75,76,0,74,75,79,80,51,75,74,75,51,74,75,76,51,51,51,74,75,76,130,79,80,130,79,80,130,79,80,0,51,51,74,75,76,131,79,80,130,130,74,75,132,79,80,51,74,75,132,79,80,51,79,80,51,75,133,79,80,51,132,79,80,51,51,74,75,76,132,132,51,74,75,76,51,74,75,76,51,74,75,76,133,79,80,51,51,74,75,76,66,66,66,66,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,134,84,84,84,85,0,0,84,85,84,84,85,84,85,84,85,84,85,84,0,0,84,85,84,85,84,85,0,84,84,85,84,85,84,85,84,85,84,85,135,136,137,138,139,137,136,136,137,139,50,50,50,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,86,86,86,86,0,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,94,92,94,92,92,92,92,94,92,94,92,94,92,140,92,94,92,94,92,94,92,94,92,94,92,0,0,95,58,95,58,95,58,95,58,95,58,58,58,95,95,58,95,58,95,95,58,95,58,95,58,58,58,95,95,58,95,58,95,58,58,58,95,95,95,95,58,95,58,95,58,95,58,95,58,95,58,95,40,0,40,0,0,0,40,0,40,0,46,40,96,97,98,99,46,40,96,97,98,99,46,46,40,96,97,98,99,46,40,96,97,98,99,46,46,40,40,96,96,97,97,98,98,99,99,46,40,96,97,98,99,46,40,96,97,98,99,46,40,96,97,98,99,46,40,96,97,98,99,96,46,40,96,97,98,99,97,96,46,98,46,96,46,46,40,40,96,96,97,97,98,98,99,99,46,97,98,99,46,46,40,96,97,98,99,46,40,96,97,98,99,46,40,96,97,98,99,46,40,96,97,98,99,46,40,96,97,98,99,0,0,0,0,1,2,100,1,2,100,1,2,100,1,2,100,1,118,1,2,100,118,1,2,100,1,2,100,0,1,1,2,2,100,100,1,1,2,100,1,2,100,0,1,2,100,1,2,100,1,1,1,2,100,1,2,100,1,2,100,1,2,100,1,2,100,1,2,100,2,1,1,2,2,100,100,100,1,2,100,2,118,118,118,1,2,100,1,2,100,1,2,100,2,1,2,100,0,103,82,103,0,82,0,82,103,82,103,82,103,82,103,141,82,103,141,82,103,82,103,82,82,103,0,82,103,82,103,82,103,82,103,82,103,82,103,82,103,82,103,141,141,82,103,82,82,103,82,103,82,141,82,103,82,103,82,103,82,103,82,103,102,102,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,77,77,77,77,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,142,143,144,145,146,147,148,0,0,113,113,111,113,113,0,113,112,113,113,111,113,113,113,113,113,112,113,113,111,111,0,113,113,113,0,113,111,113,113,112,113,113,113,111,113,113,111,112,113,111,112,113,111,112,113,111,112,113,111,111,111,112,112,113,113,111,112,113,113,111,112,113,111,112,113,111,113,111,112,113,111,112,113,111,112,113,111,112,113,111,112,113,111,112,113,149,150,151,152,90,90,90,90,90,0,0,90,114,90,114,90,90,90,90,90,114,90,114,90,114,90,114,90,114,90,114,90,114,90,114,90,0,0,0,115,63,116,115,63,116,115,63,116,115,63,116,63,115,115,63,63,116,116,115,63,116,115,63,116,115,115,63,116,115,63,116,63,116,63,116,115,63,116,115,63,116,115,115,63,63,116,116,63,116,115,115,115,63,116,115,63,116,115,63,116,115,63,116,63,115,63,116],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]]],[[6,[[5,[4]]]]]],[[7,1,[3,[2]]],[[6,[[5,[4]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[9,[0]]]],[10,[[9,[0]]]],[7,7],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[8,8],[23,23],[24,24],[10,10],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[29,29],33],0,0,[[[36,[[35,[34]],34]]],[[38,[37]]]],[39],[[1,37],[[6,[[5,[4]]]]]],[[7,1,37],[[6,[[5,[4]]]]]],[[],[[6,[[5,[4]]]]]],[7,[[6,[[5,[4]]]]]],[40,[[6,[[5,[4]]]]]],[[7,40],[[6,[[5,[4]]]]]],[[1,37,37],[[6,[[5,[4]]]]]],[[7,1,37,37],[[6,[[5,[4]]]]]],0,0,0,0,[39,[[9,[32]]]],[[],37],[[],[[42,[41]]]],0,0,0,[43,[[9,[17]]]],[43,[[9,[18]]]],[43,[[9,[19]]]],[43,[[9,[20]]]],[43,[[9,[21]]]],[[],[[9,[21,44]]]],[43,[[9,[22]]]],[[],[[9,[22,44]]]],[[],[[9,[8,44]]]],[43,[[9,[8]]]],[43,[[9,[23]]]],[[],[[9,[23,44]]]],[43,[[9,[24]]]],[[],[[9,[24,44]]]],[43,[[9,[10]]]],[[],[[9,[10,44]]]],[43,[[9,[25]]]],[[],[[9,[25,44]]]],[[],[[9,[26,44]]]],[43,[[9,[26]]]],[43,[[9,[28]]]],[[],[[9,[29,44]]]],[43,[[9,[29]]]],[[],[[9,[30,44]]]],[43,[[9,[30]]]],[43,[[9,[31]]]],0,0,[[21,21],45],[[22,22],45],[[8,8],45],[[23,23],45],[[24,24],45],[[10,10],45],[[25,25],45],[[26,26],45],[[29,29],45],[[30,30],45],[[32,32],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],0,0,0,0,0,0,0,0,0,0,0,[1,[[6,[[5,[4]]]]]],[[7,1],[[6,[[5,[4]]]]]],0,[46,[[6,[[5,[4]]]]]],[[7,46],[[6,[[5,[4]]]]]],[[7,47],48],[[11,47],48],[[11,47],48],[[12,47],48],[[13,47],48],[[14,47],48],[[15,47],48],[[16,47],48],[[17,47],48],[[18,47],48],[[19,47],48],[[20,47],48],[[21,47],48],[[22,47],48],[[8,47],48],[[23,47],48],[[24,47],48],[[10,47],48],[[25,47],48],[[26,47],48],[[27,47],48],[[28,47],48],[[29,47],48],[[30,47],48],[[31,47],48],[[32,47],48],[[32,47],48],[[[36,[[0,[49,[35,[[0,[49,34]]]]]],[0,[49,34]]]],47],48],[[]],[[]],[[]],[50,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[46,51,52,53],[[9,[8,0]]]],[39,[[9,[[42,[41]],32]]]],[[37,[38,[37]],[38,[54]]],[[6,[[5,[4]]]]]],[[7,37,[38,[37]],[38,[54]]],[[6,[[5,[4]]]]]],[[37,[38,[37]],[38,[54]]],[[6,[[5,[4]]]]]],[[7,37,[38,[37]],[38,[54]]],[[6,[[5,[4]]]]]],[[[36,[[35,[34]],34]]],7],[1,[[6,[[5,[4]]]]]],[[7,1],[[6,[[5,[4]]]]]],[[[38,[37]]],[[6,[[5,[4]]]]]],[[7,[38,[37]]],[[6,[[5,[4]]]]]],[[],17],[[1,[38,[54]],[38,[54]]],[[6,[[5,[4]]]]]],[[7,1,[38,[54]],[38,[54]]],[[6,[[5,[4]]]]]],[[1,[38,[37]],[38,[54]]],[[6,[[5,[4]]]]]],[[7,1,[38,[37]],[38,[54]]],[[6,[[5,[4]]]]]],[[[0,[55,56]],57],52],[[[0,[55,56]],57],52],[[[0,[55,56]],57],52],[24,58],[[[36,[[35,[34]],34]]],59],[1,[[6,[[5,[4]]]]]],[[7,1],[[6,[[5,[4]]]]]],[1,[[6,[[5,[4]]]]]],[[7,1],[[6,[[5,[4]]]]]],0,0,0,0,0,0,0,[[21,60]],[[22,60]],[[30,60]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,24],45],[[45,37],[[5,[61]]]],0,0,0,0,0,0,0,0,[[],62],[[10,[3,[21]],45],23],0,[[25,63],10],[[46,52,1,52,[38,[26]],37,[3,[63]]],25],[[17,[35,[34]]],[[36,[[35,[34]],34]]]],0,0,[[],29],0,0,0,[[21,21],[[38,[33]]]],[[22,22],[[38,[33]]]],[[29,29],[[38,[33]]]],[[30,30],[[38,[33]]]],0,[[[36,[[35,[34]],34]]],[[38,[64]]]],0,0,0,0,0,[65],[65],[[[36,[[35,[34]],34]]],[[38,[[42,[41]]]]]],0,0,[[39,[42,[41]]],[[9,[32]]]],0,0,[59,[[67,[[9,[27,66]]]]]],0,0,0,0,0,0,0,[[21,68],9],[[21,69],[[9,[44]]]],[[22,69],[[9,[44]]]],[[22,68],9],[[8,69],[[9,[44]]]],[[8,68],9],[[23,68],9],[[23,69],[[9,[44]]]],[[24,69],[[9,[44]]]],[[24,68],9],[[10,69],[[9,[44]]]],[[10,68],9],[[25,68],9],[[25,69],[[9,[44]]]],[[26,68],9],[[26,69],[[9,[44]]]],[[28,68],9],[[29,69],[[9,[44]]]],[[29,68],9],[[30,68],9],[[30,69],[[9,[44]]]],[[31,68],9],[[],[[6,[[5,[4]]]]]],[7,[[6,[[5,[4]]]]]],0,0,0,0,0,0,0,0,0,[11,[[38,[70]]]],[[[36,[[35,[34]],34]]],[[9,[66]]]],0,0,0,0,0,0,0,0,0,0,0,[27,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],37],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[59,[[9,[27,66]]]],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,63],[[9,[1,0]]]],[51,51],[[[74,[73,73]]],[[74,[73,73]]]],[75,75],[76,76],[[]],[[]],[[]],[[]],[[],[[9,[77]]]],[[],[[74,[78,78]]]],[[],75],[43,[[9,[79]]]],[43,[[9,[80]]]],[43,[[9,[51]]]],[43,[[9,[75]]]],[[[74,[81,81]],[74,[81,81]]],45],[[75,75],45],[[51,47],48],[[[74,[49,49]],47],48],[[75,47],48],[[76,47],48],[80,51],[79,51],[[]],[[]],[[]],[[]],[[],56],[[],79],[[],80],[[],56],[[],79],[[],80],[[],56],[[],79],[[],80],[38,51],[51,82],[[]],[[]],[[]],[[]],[[],[[9,[[42,[41]],77]]]],[[79,79],[[9,[[42,[41]],77]]]],[[80,80],[[9,[[42,[41]],77]]]],[[],56],[[],56],0,0,[[],[[42,[41]]]],[79,[[42,[41]]]],[80,[[42,[41]]]],[51,[[42,[41]]]],0,0,[[],[[42,[41]]]],[79,[[42,[41]]]],[80,[[42,[41]]]],[51,[[42,[41]]]],[[79,68],9],[[80,68],9],[[51,68],9],[[75,68],9],[76,[[9,[[42,[41]],77]]]],[[79,76],[[9,[[42,[41]],77]]]],[[80,76],[[9,[[42,[41]],77]]]],[[51,76],[[9,[[42,[41]],77]]]],[[],[[42,[41]]]],[79,[[42,[41]]]],[80,[[42,[41]]]],[51,[[42,[41]]]],[[]],[[]],[[]],[[]],[[],37],[[],37],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],71],[[],71],[[],71],[[],71],[76,[[9,[77]]]],[[79,76],[[9,[77]]]],[[80,76],[[9,[77]]]],[[51,76],[[9,[77]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[66,47],48],[[66,47],48],[[]],[83,66],[[]],[65],[66,[[38,[70]]]],[[],37],[[],9],[[],9],[[],71],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[84,84],[85,85],[[]],[[]],[43,[[9,[84]]]],0,0,[[84,47],48],[[85,47],48],[[]],[[]],[[]],[[]],0,[[84,68],9],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],71],[[],71],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[50,50],[[]],[[50,47],48],[[50,47],48],[[]],[[]],[65],[50,[[38,[70]]]],[[]],[[],37],[[],9],[[],9],[[],71],[[]],0,[[[86,[34]],21],[[9,[50]]]],[[]],[[]],[[[86,[34]],26,37,63],[[9,[50]]]],[[87,88],89],[[]],[[[86,[34]],1,2],[[9,[50]]]],[[[86,[34]]],[[9,[50]]]],[[]],0,[[[86,[34]],46],[[9,[1,50]]]],[[[86,[34]],1,52],[[9,[50]]]],[[],9],[[],9],[[],71],[[[86,[34]],1,63,52],[[9,[50]]]],[[]],0,0,0,[[]],[[]],[[]],[[]],[92,92],[[]],[[92,47],48],[[]],[[]],[[]],[[]],0,[[[0,[84,85]]],92],[46,[[6,[[5,[4]]]]]],[[92,46],[[6,[[5,[4]]]]]],[[[94,[34]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],71],[[],71],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[58,58],[95,95],[[]],[[]],0,[43,[[9,[58]]]],[[],[[9,[58,44]]]],[43,[[9,[95]]]],[[],[[9,[95,44]]]],[[58,58],45],[[95,95],45],[[],45],[[],45],0,[[58,47],48],[[95,47],48],[[]],[[]],0,0,[[]],[[]],0,0,[[1,46,52,1,58,45],95],0,0,0,[[58,69],[[9,[44]]]],[[58,68],9],[[95,68],9],[[95,69],[[9,[44]]]],0,0,0,0,[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],71],[[],71],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,[[9,[0]]]],[46,46],[40,40],[96,96],[97,97],[98,98],[99,99],[[]],[[]],[[]],[[]],[[]],[[]],[43,[[9,[46]]]],[[],[[9,[46,44]]]],[[],[[9,[40,44]]]],[43,[[9,[40]]]],[43,[[9,[96]]]],[[],[[9,[96,44]]]],[43,[[9,[97]]]],[[],[[9,[97,44]]]],[43,[[9,[98]]]],[[],[[9,[98,44]]]],[43,[[9,[99]]]],[[],[[9,[99,44]]]],[[46,46],45],[[40,40],45],[[96,96],45],[[97,97],45],[[98,98],45],[[99,99],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[46,47],48],[[40,47],48],[[96,47],48],[[97,47],48],[[98,47],48],[[99,47],48],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[40,63],46],0,0,0,[[46,68],9],[[46,69],[[9,[44]]]],[[40,69],[[9,[44]]]],[[40,68],9],[[96,69],[[9,[44]]]],[[96,68],9],[[97,69],[[9,[44]]]],[[97,68],9],[[98,68],9],[[98,69],[[9,[44]]]],[[99,68],9],[[99,69],[[9,[44]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[100,100],[[]],[[]],[[]],[[],1],[[],37],[1,37],[2,37],[100,37],[[],[[42,[41]]]],[1,[[42,[41]]]],[2,[[42,[41]]]],[100,[[42,[41]]]],0,0,0,0,[43,[[9,[1]]]],[[],[[9,[1,44]]]],[43,[[9,[2]]]],[[],[[9,[2,44]]]],[[],[[9,[100,44]]]],[43,[[9,[100]]]],0,[[1,1],45],[[2,2],45],[[100,100],45],[[],45],[[],45],[[],45],0,[[1,47],48],[[2,47],48],[[100,47],48],[[]],[[]],[[]],[101,[[9,[1,77]]]],[72,[[9,[1,0]]]],[39,[[9,[1]]]],[39,[[9,[2]]]],[39,[[9,[100]]]],[[[0,[55,56]],57],52],[[[0,[55,56]],57],52],[[[0,[55,56]],57],52],[[1,60]],[[2,60]],[[100,60]],[[]],[[]],[[]],[102,1],[82,2],[103,100],[[1,1],[[38,[33]]]],[[2,2],[[38,[33]]]],[[100,100],[[38,[33]]]],0,[[1,69],[[9,[44]]]],[[1,68],9],[[2,68],9],[[2,69],[[9,[44]]]],[[100,68],9],[[100,69],[[9,[44]]]],0,[[]],[[]],[[]],[2,103],[[],37],[[],37],[[],37],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],71],[[],71],[[],71],[[2,100],[[9,[77]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[82,82],[103,103],[[]],[[]],[[],88],[82,88],[103,88],[[],88],[82,88],[103,88],[82,2],[103,100],[[],[[9,[82,44]]]],[43,[[9,[82]]]],[[],[[9,[103,44]]]],0,[[82,82],45],[[103,103],45],[[],45],[[],45],[[82,47],48],[[103,47],48],[[]],[[]],[39,[[9,[82]]]],[39,[[9,[103]]]],[[[0,[55,56]],57],52],[[[0,[55,56]],57],52],[[82,60]],[[103,60]],[[]],[[]],[[],88],[[],88],[[82,82],[[38,[33]]]],[[103,103],[[38,[33]]]],[[82,69],[[9,[44]]]],[[82,68],9],[[103,69],[[9,[44]]]],[[]],[[]],[82,103],[[],37],[82,37],[103,37],[[],9],[[],9],[[],9],[[],9],[[],71],[[],71],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[102,102],[[]],[102,88],[102,88],[[],[[9,[102,44]]]],[43,[[9,[102]]]],[102,[[42,[41]]]],[[102,102],45],[[],45],[[102,47],48],[[]],[39,[[9,[102]]]],[[[0,[55,56]],57],52],[[102,60]],[[]],[[102,102],[[38,[33]]]],[[102,68],9],[[102,69],[[9,[44]]]],[[]],[102,37],[[],9],[[],9],[[],71],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[77,47],48],[[77,47],48],[104,77],[105,77],[106,77],[107,77],[108,77],[[]],[109,77],[110,77],[[]],[65],[77,[[38,[70]]]],[[],37],[[],9],[[],9],[[],71],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[111,111],[112,112],[113,113],[[]],[[]],[[]],[[111,111],45],[[111,47],48],[[111,47],48],[[112,47],48],[[112,47],48],[[113,47],48],[[113,47],48],[[]],[[]],[112,113],[[]],[[]],[[]],[[]],[65],[65],[65],[111,[[38,[70]]]],[113,[[38,[70]]]],[[]],[[]],[[]],[[],37],[[],37],[[],37],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],71],[[],71],[[],71],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[90,90],[[]],[43,[[9,[90]]]],[[90,47],48],[[]],[[]],[[]],[[]],[[[0,[[0,[90]]]],[0,[0,[9,[0]]]],[0,[84,85]],[0,[0,0]],91],114],[[90,68],9],[114],[[]],[[],9],[[],9],[[],9],[[],9],[[],71],[[],71],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[115,115],[63,63],[116,116],[[]],[[]],[[]],0,[43,[[9,[115]]]],[[],[[9,[115,44]]]],[43,[[9,[63]]]],[[],[[9,[63,44]]]],[43,[[9,[116]]]],[[],[[9,[116,44]]]],[[115,115],45],[[63,63],45],[[116,116],45],[[],45],[[],45],[[],45],0,[[115,47],48],[[63,47],48],[[116,47],48],[[]],[[]],[[]],[[[0,[55,56]],57],52],[[[0,[55,56]],57],52],[[63,60]],[[116,60]],[[]],[[]],[[]],[[115,115],[[38,[33]]]],[[63,63],[[38,[33]]]],[[116,116],[[38,[33]]]],[[115,69],[[9,[44]]]],[[115,68],9],[[63,69],[[9,[44]]]],[[63,68],9],[[116,69],[[9,[44]]]],[[116,68],9],0,0,0,0,[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],71],[[],71],[[],71],[63,[[9,[0]]]],[[]],[[]],[[]]],"c":[],"p":[[3,"DigestIdentifier"],[3,"KeyIdentifier"],[3,"HashSet"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"NodeAPI"],[3,"Event"],[4,"Result"],[3,"EventProposal"],[4,"ApiError"],[4,"APICommands"],[4,"ApiResponses"],[3,"GetAllSubjects"],[3,"GetSingleSubject"],[3,"GetEventsOfSubject"],[3,"TapleSettings"],[3,"NetworkSettings"],[3,"NodeSettings"],[3,"DatabaseSettings"],[3,"Approval"],[3,"ApprovalContent"],[3,"EventContent"],[3,"ValidationProof"],[3,"Proposal"],[3,"Evaluation"],[4,"Notification"],[3,"SubjectData"],[3,"TimeStamp"],[4,"Acceptance"],[3,"ApprovalPetitionData"],[4,"DbError"],[4,"Ordering"],[8,"DatabaseCollection"],[8,"DatabaseManager"],[3,"Taple"],[3,"String"],[4,"Option"],[15,"str"],[4,"EventRequestType"],[15,"u8"],[3,"Vec"],[8,"Deserializer"],[3,"Error"],[15,"bool"],[3,"EventRequest"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"EventError"],[4,"KeyPair"],[15,"u64"],[4,"Value"],[15,"i64"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[3,"Metadata"],[3,"NotificationHandler"],[8,"Hasher"],[8,"Iterator"],[3,"MemoryManager"],[3,"Signature"],[3,"PeerId"],[3,"Demand"],[4,"Error"],[6,"BoxFuture"],[8,"Serializer"],[8,"Write"],[8,"Error"],[3,"TypeId"],[8,"BorshSerialize"],[8,"Clone"],[3,"BaseKeyPair"],[3,"CryptoBox"],[4,"Payload"],[4,"Error"],[8,"Default"],[6,"Ed25519KeyPair"],[6,"Secp256k1KeyPair"],[8,"PartialEq"],[4,"KeyDerivator"],[4,"ConfigError"],[4,"EventCommand"],[4,"EventResponse"],[3,"EventCompleter"],[15,"u32"],[15,"usize"],[15,"f64"],[4,"TapleMessages"],[3,"Sender"],[3,"EventAPI"],[3,"Receiver"],[3,"EventManager"],[3,"EventContent"],[3,"CreateRequest"],[3,"StateRequest"],[3,"TransferRequest"],[3,"EOLRequest"],[3,"SignatureIdentifier"],[8,"Serialize"],[4,"DigestDerivator"],[4,"SignatureDerivator"],[4,"Infallible"],[3,"Error"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"Error"],[4,"DecodeError"],[4,"ProtocolErrors"],[4,"EventCreationError"],[4,"ResponseError"],[3,"ProtocolManager"],[3,"SignatureContent"],[3,"UniqueSignature"],[8,"ApiModuleInterface"],[8,"Derivable"],[13,"EventCreationError"],[13,"ApprovalInternalError"],[13,"NewSubject"],[13,"NewEvent"],[13,"SubjectSynchronized"],[13,"QuroumReached"],[13,"EventSigned"],[13,"RequestReached"],[13,"RequestNegativeQuroumReached"],[13,"RequestQuroumReached"],[13,"RequestDeleted"],[8,"KeyGenerator"],[8,"DHKE"],[8,"KeyMaterial"],[8,"DSA"],[13,"SettingsError"],[13,"ApproverResponse"],[13,"EvaluatorResponse"],[13,"ValidatorResponse"],[13,"Event"],[13,"HigherGovernanceExpected"],[8,"EventAPIInterface"],[8,"Derivator"],[13,"InfalibleError"],[13,"Base64DecodingError"],[13,"Ed25519Error"],[13,"SerdeJson"],[13,"SerdeCbor"],[13,"MsgPackSerialize"],[13,"MsgPackDeserialize"],[13,"ChannelError"],[13,"GovernanceError"],[13,"GovernanceError"],[13,"EventCreationError"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
