var searchIndex = JSON.parse('{\
"taple_core":{"doc":"TAPLE is a DLT focused on traceability characterized by â€¦","t":"EIDNNDDENNNNNINIEINEDNNNCDDDNENNNNNNNNNENDEENDDDDNNNNNNDDNNNEDNNNNNNNNNNNNDNNDDDDDNNDDNMKLKLMMMKLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLKLMAKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMMMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLKLLKLKLFKLKLKLKLLLLLKLLLLKLLKLKLKLKLKLMMMMMMMMMLLMMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMMMMMMMMMLLLLLMLMLLMMMLMMLLLLMMKLLMAMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLKLLAMMMMMMMLLMMMMMMMMMOMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMDNNDIINGIIEENGLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLKLLFLLLLLLLLLKLLLLMMKLLLMMKLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLKLLLLLLLNNNNNENNNNNNNLLLLLLLLLLLLLLLLLLMIDDDLLLLLLLLLLLLLLLLLLLKLLLKLLLMMMALLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLINNNENELLLLLLLLKLLLLLLKLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLNNENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDNENDNNEDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMMMLMLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMLLLLLLLLLLL","n":["ApiError","ApiModuleInterface","ApprovalEntity","ApprovalInternalError","ApprovalReceived","ApprovalRequest","ApprovalResponse","ApprovalState","Blake3_256","Blake3_512","Conflict","Create","CustomError","DatabaseCollection","DatabaseError","DatabaseManager","DbError","Derivable","DeserializeError","DigestDerivator","DigestIdentifier","EOL","Ed25519","EntryNotFound","Error","EvaluationRequest","EvaluationResponse","Event","EventCreationError","EventRequest","Fact","IP4","IP6","InvalidCombination","InvalidIP4","InvalidIP6","InvalidListenAddr","InvalidParameters","InvalidProtocolSpecified","KeyDerivator","KeyElementsError","KeyIdentifier","ListenAddr","ListenAddrErrors","Memory","MemoryCollection","MemoryManager","Metadata","NetworkSettings","NewEvent","NewSubject","NoDigestIdentifier","NoTCP","NoTransportProtocolSpecified","NoU32Port","NodeAPI","NodeSettings","NonExistentStatus","NotEnoughPermissions","NotFound","Notification","NotificationHandler","Obsolete","ObsoletedApproval","Pending","RespondedAccepted","RespondedRejected","SHA2_256","SHA2_512","SHA3_256","SHA3_512","Secp256k1","SerializeError","SignError","SignatureIdentifier","StateUpdated","SubjectApplyFailed","SubjectData","Taple","TapleSettings","TapleShutdownManager","TimeStamp","Transfer","UnexpectedError","ValidationProof","ValueWrapper","VoteNotNeeded","active","add_keys","add_keys","add_preauthorize_subject","add_preauthorize_subject","appr_req_hash","appr_required","appr_required","approval_request","approval_request","approved","approved","approvers","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","context","controller_id","create_collection","create_collection","creator","crypto","default","default","default","del","del","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derivation_code","derivative","derivator","derivator","derivator","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_variant","digest","digest_derivator","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","eval_req_hash","eval_success","eval_success","evaluators","event_hash","event_request","event_request","event_request","external_address","external_request","external_request","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis_governance_version","get","get","get","get_all_allowed_subjects_and_providers","get_all_allowed_subjects_and_providers","get_api","get_approval","get_approval","get_approvals","get_approvals","get_default_settings","get_event","get_event","get_events","get_events","get_governance_subjects","get_governance_subjects","get_governances","get_governances","get_hash","get_hash","get_metadata","get_notification_handler","get_pending_requests","get_pending_requests","get_port","get_raw_receiver","get_raw_sender","get_request","get_request","get_shutdown_manager","get_single_request","get_single_request","get_subject","get_subject","get_subjects","get_subjects","get_subjects_by_governance","get_subjects_by_governance","get_validation_proof","get_validation_proof","gov_id","gov_version","gov_version","gov_version","governance_id","governance_id","governance_id","governance_version","governance_version","hash","hash","hash_prev_event","hash_prev_event","id","identifier","increment_port","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_similar","iter","iter","key_derivator","known_nodes","listen_addr","name","name","namespace","namespace","namespace","network","new","new","new","new_from_genesis_event","new_from_transfer_event","node","now","owner","partial_cmp","partial_cmp","patch","patch","patch","peer_id","prev_event_hash","properties","provide","provide","provide","public_key","public_key","public_key","put","put","receive","replication_factor","request","request","response","schema_id","schema_id","schema_id","secret_key","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shutdown","shutdown","shutdown","signature","signature","smartcontracts_directory","sn","sn","sn","sn","sn","source","start","state","state_hash","state_hash","state_hash","subject_id","subject_id","subject_id","subject_id","subject_public_key","test_database_manager_trait","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_rec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_shutdown","source","source","addr","addr","port","port","port","id","id","sn","sn","sn","sn","subject_id","subject_id","subject_id","subject_id","subject_id","BaseKeyPair","Buffer","BufferArray","CryptoBox","DHKE","DSA","Ed25519","Ed25519KeyPair","KeyGenerator","KeyMaterial","KeyPair","Payload","Secp256k1","Secp256k1KeyPair","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_seed","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_reader","drop","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_public_key","from_public_key","from_public_key","from_secret_key","from_secret_key","from_secret_key","from_seed","from_seed","from_seed","generate","get_key_derivator","init","init","init","init","into","into","into","into","key_exchange","key_exchange","key_exchange","new","new","public_key","public_key","public_key_bytes","public_key_bytes","public_key_bytes","public_key_bytes","secret_key","secret_key","secret_key_bytes","secret_key_bytes","secret_key_bytes","secret_key_bytes","serialize","serialize","serialize","serialize","serialize","sign","sign","sign","sign","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_str","to_str","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","verify","verify","verify","vzip","vzip","vzip","vzip","AcessPointError","ApiNotYetAvailable","CantReceiveNotification","DatabaseError","DeSerializeError","Error","InvalidHexString","InvalidKeyPairSpecified","NoMCAvailable","NoNewNotification","PkConflict","SerializeError","SettingsError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","init","into","provide","source","to_string","try_from","try_into","type_id","vzip","source","Derivable","DigestIdentifier","KeyIdentifier","SignatureIdentifier","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","derivation_code","derivation_code","derivation_code","derivation_code","derivative","derivative","derivative","derivative","derivator","derivator","derivator","derive","deserialize","deserialize","deserialize","deserialize_reader","deserialize_reader","deserialize_reader","digest","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_serializable","from_serializable_borsh","from_str","from_str","from_str","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","into","into","into","new","new","new","partial_cmp","partial_cmp","partial_cmp","public_key","serialize","serialize","serialize","serialize","serialize","serialize","signature","to_owned","to_owned","to_owned","to_signature_derivator","to_str","to_str","to_str","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip","Derivator","ECDSAsecp256k1","Ed25519","Ed25519Sha512","KeyDerivator","Secp256k1","SignatureDerivator","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","code_len","code_len","code_len","deref","deref","deref_mut","deref_mut","derivative_len","derivative_len","derivative_len","derive","derive","deserialize","deserialize_reader","deserialize_reader","deserialize_variant","deserialize_variant","digest","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_str","from_str","get_hash","get_hash","hash","hash","init","init","into","into","material_len","material_len","partial_cmp","partial_cmp","serialize","serialize","serialize","to_owned","to_owned","to_signature_derivator","to_str","to_str","to_str","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Blake3_256","Blake3_512","DigestDerivator","SHA2_256","SHA2_512","SHA3_256","SHA3_512","borrow","borrow_mut","clone","clone_into","code_len","deref","deref_mut","derivative_len","deserialize","deserialize_reader","deserialize_variant","digest","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_str","get_hash","hash","init","into","partial_cmp","serialize","serialize","to_owned","to_str","try_from","try_into","type_id","vzip","Create","EOL","EOLRequest","Error","EventRequest","Fact","FactRequest","Finished","Processing","RequestState","StartRequest","TapleRequest","Transfer","TransferRequest","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_reader","deserialize_variant","deserialize_variant","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_request","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","governance_id","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","name","namespace","payload","public_key","public_key","requires_eval_appr","schema_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sn","state","subject_id","subject_id","subject_id","subject_id","success","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Signature","Signed","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","content","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize_reader","deserialize_reader","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_genesis_request","get_hash","get_hash","hash","hash","init","init","into","into","new","new","new","new","new","new","new_from_pk_ed25519","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","signature","signer","timestamp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","varify","verify","verify","verify","verify","verify","verify","verify_eval_appr","verify_signatures","vzip","vzip"],"q":[[0,"taple_core"],[763,"taple_core::ApiError"],[765,"taple_core::ListenAddr"],[770,"taple_core::Notification"],[781,"taple_core::crypto"],[918,"taple_core::error"],[949,"taple_core::error::Error"],[950,"taple_core::identifier"],[1070,"taple_core::identifier::derive"],[1148,"taple_core::identifier::derive::digest"],[1188,"taple_core::request"],[1386,"taple_core::signature"]],"d":["Errors that may occur when using the TAPLE API","Trait that allows implementing the interface of a TAPLE â€¦","A struct representing an approval entity.","An error has occurred in the process of creating an event. â€¦","An approval request has been received","A struct representing an approval request.","A struct representing an approval response.","An enum representing the state of an approval entity.","","","","A request to create a new subject.","User-specifiable custom error","A trait representing a collection of key-value pairs in a â€¦","","Trait to define a database compatible with Taple","Errors that can be generated by Taple database â€¦","Derivable Identifiers","A deserialization error occurred while reading from the â€¦","Enumeration with digest derivator types","Digest based identifier","A request to mark a subject as end-of-life.","The Ed25519 key derivator.","The entry does not exist in the database","","A struct representing an evaluation request.","A struct representing an evaluation response.","A struct representing an event.","","An enum representing a TAPLE event request.","A request to add a fact to a subject.","Represents an ip4 address","Represents an ip6 address","","","","","Invalid parameters have been entered, usually identifiers.","","An enumeration of key derivator types.","","Key based identifier","Represents a valid listening address for TAPLE. â€¦","Errors that can occur during the generation of a [â€¦","Represents in-memory addressing.","Collection for in-memory database implementation. It must â€¦","In-memory database implementation for TAPLE.","A struct representing the metadata of a TAPLE event.","P2P network configuration parameters of a TAPLE node.","A new event has been generated","A new subject has been generated","Conversion of a data to [DigestIdentifier] failed","","","","Object that allows interaction with a TAPLE node.","General settings of a TAPLE node.","","","An item of the protocol has not been found, for example, a â€¦","Notifications generated by [NotificationHandler]. These â€¦","Object that allows receiving notifications of the â€¦","The approval entity is obsolete.","Approval Obsoleted because gov version changed or event â€¦","The approval entity is pending a response.","Request for approval which is in responded status and â€¦","Request for approval which is in responded status and â€¦","","","","","The Secp256k1 key derivator.","A serialization error occurred when writing to the â€¦","An error occurred during a signature process","Signature based identifier","A subject has been synchronized","An error occurred while updating a subject in the database.","A struct representing the data associated with a TAPLE â€¦","Structure representing a node of a TAPLE network.","Configuration parameters of a TAPLE node divided into â€¦","Structure that allows a signal to be emitted to stop the â€¦","A struct representing a timestamp.","A request to transfer ownership of a subject.","An unexpected error has occurred","A struct representing a validation proof.","Wrapper of serde_json::Value implementing serialization â€¦","No permissions required or possessed to vote on an event â€¦","Indicates whether the subject is active or not.","","","","","The hash of the approval request being responded to.","Whether approval is required for the evaluation to be â€¦","Whether approval is required for the event to be applied â€¦","Allows to vote on a voting request that previously exists â€¦","","Whether the approval request was approved or not.","Whether the event has been approved.","The set of approvers who have approved the event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The context in which the evaluation is being performed.","Returns the controller ID of the node is available. This â€¦","Creates a database collection","","The identifier of the public key of the subject creator.","This module provides the structs and traits for the â€¦","Default constructor for the database manager. Is is mainly â€¦","","","Removes the value associated with the given key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DigestDerivator to be used for future event and subject â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Possible errors of a TAPLE Node","The hash of the evaluation request being responded to.","Whether the evaluation was successful and the result was â€¦","Whether the evaluation was successful and the result was â€¦","The set of evaluators who have evaluated the event.","The identifier of the current event in the validation â€¦","The signed event request.","The signed event request.","The signed event request.","List of bootstrap nodes to connect to.","Allows to make a request to the node from an external â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The version of the governance contract that created the â€¦","Retrieves the value associated with the given key.","","","","","This methods allows to get the API of the node. The API â€¦","","","","","Instance a default settings to start a new Taple Node","","","Allows to obtain events from a specific subject previously â€¦","","","","It allows to obtain all the subjects that model existing â€¦","","","","","This method allows to get an instance of â€¦","It allows to obtain all the voting requests pending to be â€¦","","Allows to obtain the port of the listening address","Allows to obtain the underlying channel to receive messages","Allows to obtain the underlying channel to send messages","","","This method allows to get the receiver of the shutdown â€¦","It allows to obtain a single voting request pending to be â€¦","","Allows to obtain a specified subject by specifying its â€¦","","Allows to get all subjects that are known to the current â€¦","","","","","","The hash of the previous event.","The version of the governance contract.","The version of the governance contract.","The version of the governance contract.","The identifier of the governance contract.","The identifier of the governance contract associated with â€¦","The identifier of the governance contract associated with â€¦","The version of the governance contract.","The version of the governance contract used to validate â€¦","","","The hash of the previous event.","The hash of the previous event.","The identifier of the approval entity.","Identifiers module","Allows to increment the port of the listening address by a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns an iterator over the key-value pairs in the â€¦","","KeyDerivator to be used by the secret key.","List of bootstrap nodes to connect to.","Multiaddr to consider by the node.","The name of the subject.","The name of the subject being validated.","The namespace of the event.","The namespace of the subject.","The namespace of the subject being validated.","","","","Main and unique method to create an instance of a TAPLE â€¦","","","","Returns a new <code>TimeStamp</code> representing the current time.","The identifier of the public key of the subject owner.","","","The patch to apply to the state.","The patch to apply to the state.","The patch to apply to the state.","Returns the PeerId of the node is available. This ID is â€¦","The identifier of the previous event in the validation â€¦","The current status of the subject.","","","","Returns the public key (bytes format) of the node is â€¦","","The identifier of the public key of the subject owner.","Associates the given value with the given key.","","It forces the object to wait until the arrival of a new â€¦","Percentage of network nodes receiving protocol messages in â€¦","Contains all valid event requests","The signed approval request.","The signed approval response, if one has been received.","The identifier of the schema used to validate the event.","The identifier of the schema used to validate the subject.","The identifier of the schema used to validate the subject.","Secret key to be used by the node","The state of the approval entity.","","","","","","","","","","","","","","","","","","","","","","","","Stops the node, consuming the instance on the fly. This â€¦","It issues a shutdown signal and waits until the node has â€¦","","Define the data structures related to signatures","","","The sequence number of the event.","The sequence number of the event.","The sequence number of the event.","The current sequence number of the subject.","The sequence number of the subject being validated.","","This method initializes a TAPLE node, generating each of â€¦","The state of the approval entity.","The hash of the state after applying the patch.","The hash of the state after applying the patch.","The hash of the state after applying the patch.","The identifier of the subject of the event.","The identifier of the subject of the event.","The identifier of the subject.","The identifier of the subject being validated.","The identifier of the public key of the subject being â€¦","Allows a TAPLE database implementation to be subjected to â€¦","Timeout to be used between protocol iterations","","","","","","","","","","","","","","","","","","","","","","","Allows to obtain, as a string, the listening address in â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The handler tries to get a notification. If there is none, â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait until a shutdown signal is received from the node.","","","","","","","","","","","","","","","","","","","Base for asymmetric key pair","","","Represents asymetric key pair for storage (deprecated: â€¦","Used for Diffieâ€“Hellman key exchange operations","Used for Digital Signature Algorithm (DSA)","","Ed25519 cryptographic key pair","Collection of methods to initialize a key pair using â€¦","Return key material bytes","Asymmetric key pair","Payloads","","Secp256k1 cryptographic key pair","","","","","","","","","","","","","","","","","Creates 32 bytes seed","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates keys from existing public key","","","Generate keys from existing secret key","","","Generates keys deterministically using a given seed","","","Generate key pair","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform key exchange operation","","","Generates random keys","Generates random keys","","","Returns the public key bytes as slice","","","","","","Returns the secret key bytes as slice","","","","","","","","","Performs sign operation","","","","Returns bytes from key pair","","","","","","","","Returns String from key pair encoded in base64","Returns String from key pair encoded in base64","","","","","","","","","","","","","Performs verify operation","","","","","","","","","","","","","Possible errors that a TAPLE node can generate. It does â€¦","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Derivable Identifiers","Digest based identifier","Key based identifier","Signature based identifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Print derivation module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derivator trait","","The Ed25519 key derivator.","","An enumeration of key derivator types.","The Secp256k1 key derivator.","Enumeration with signature derivator types","","","","","","","","","","","","","","","","","","","","","","","","","","Digest derive","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Enumeration with digest derivator types","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","A request to create a new subject.","A request to mark a subject as end-of-life.","A struct representing a request to mark a subject as â€¦","","An enum representing a TAPLE event request.","A request to add a fact to a subject.","A struct representing a request to add a fact to a subject.","","","Indicates the current status of an event request.","A struct representing a request to create a new subject.","A struct representing a TAPLE request.","A request to transfer ownership of a subject.","A struct representing a request to transfer ownership of a â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The event request associated with the request.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The identifier of the governance contract.","The identifier of the request.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The name of the subject.","The namespace of the subject.","The payload of the fact to be added.","The identifier of the public key of the subject owner.","The identifier of the public key of the new owner.","","The identifier of the schema used to validate the event.","","","","","","","","","","","","","","","The sequence number of the request, if any.","The state of the request.","The identifier of the subject to which the fact will be â€¦","The identifier of the subject to transfer ownership of.","The identifier of the subject to mark as end-of-life.","The identifier of the subject associated with the request, â€¦","The success status of the request, if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines the data used to generate the signature, as well â€¦","Represents any signed data entity","","","","","","","","","The data that is signed","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","It allows the creation of a new signature","","","","","","It allows the creation of a new signature using private â€¦","","","","","","","The signature accompanying the data","Signer identifier","Timestamp of the signature","","","","","","","","","The signature itself","","It allow verify the signature. It checks if the content â€¦","","","","","","","","",""],"i":[0,0,0,13,27,0,0,0,89,89,13,47,31,0,13,0,0,0,31,0,0,47,1,31,0,0,0,0,13,0,47,16,16,18,18,18,18,13,18,0,31,0,0,0,16,0,0,0,0,27,27,31,18,18,18,0,0,31,13,13,0,0,21,27,21,21,21,89,89,89,89,1,31,13,0,27,31,0,0,0,0,0,47,13,0,0,13,28,100,5,100,5,20,24,25,100,5,20,25,25,10,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,29,23,35,34,37,28,0,34,37,16,33,38,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,101,101,6,7,86,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,10,19,20,21,22,23,24,25,26,29,30,10,21,6,17,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,19,20,21,22,23,24,25,26,29,30,10,31,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,29,29,29,30,30,30,10,10,10,0,24,24,25,25,30,19,23,25,15,100,5,5,13,13,14,15,16,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,31,35,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,30,33,38,10,100,5,35,100,5,100,5,0,100,5,100,5,100,5,100,5,20,29,30,35,100,5,16,60,60,100,5,35,100,5,100,5,100,5,100,5,100,5,19,19,23,25,26,28,30,26,30,20,29,19,25,22,0,16,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,30,33,38,17,15,15,28,30,26,28,30,14,37,30,35,30,30,14,29,28,20,29,19,24,25,35,30,28,13,18,31,35,7,28,33,38,58,17,0,22,22,26,28,30,17,22,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,28,29,29,30,30,10,10,100,60,5,0,86,17,19,23,25,28,30,13,35,22,19,24,25,25,26,28,30,30,0,17,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,13,16,18,31,37,38,58,60,5,13,14,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,58,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,37,38,58,60,5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10,31,35,60,102,103,104,105,106,104,105,107,108,109,110,107,108,111,109,110,107,108,0,78,78,0,0,0,74,0,0,0,0,0,74,0,74,76,77,78,74,76,77,78,74,76,77,78,74,76,77,78,0,76,77,74,76,77,78,74,76,77,78,82,83,74,77,74,74,76,77,78,76,77,74,76,77,78,74,74,74,76,77,78,112,82,83,112,82,83,112,82,83,0,74,74,76,77,78,74,76,77,78,113,82,83,112,112,76,77,114,82,83,74,76,77,114,82,83,74,82,83,74,74,77,115,82,83,74,114,82,83,74,74,76,77,78,114,114,74,76,77,78,74,76,77,78,74,76,77,78,115,82,83,74,74,76,77,78,68,68,68,68,68,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,116,0,0,0,0,6,7,86,6,7,86,6,7,86,6,7,86,6,6,7,86,6,7,86,101,6,7,86,101,6,7,86,6,7,86,0,6,7,86,6,7,86,6,6,7,86,6,7,86,6,6,6,7,7,7,86,86,86,6,6,7,7,86,86,6,7,86,6,6,6,7,86,6,7,86,6,7,86,6,7,86,6,7,86,6,7,86,6,7,86,7,6,6,7,7,86,86,86,6,7,86,7,101,101,101,6,7,86,6,7,86,6,7,86,6,7,86,7,6,7,86,0,90,1,90,0,1,0,1,90,1,90,1,90,1,90,117,1,90,1,90,1,90,117,1,90,1,90,1,1,90,1,90,0,1,90,1,90,1,1,1,90,90,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,117,117,1,90,1,1,90,1,90,1,117,1,90,1,90,1,90,1,90,1,90,89,89,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,47,47,0,94,0,47,0,94,94,0,0,0,47,0,47,65,91,92,93,94,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,47,94,47,65,91,92,93,94,95,47,65,91,92,93,94,47,47,47,65,65,65,91,91,91,92,92,92,93,93,93,94,94,94,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,65,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,65,65,91,65,92,47,65,47,47,65,65,91,91,92,92,93,93,94,94,95,95,95,95,91,92,93,95,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,47,65,91,92,93,94,95,0,0,96,48,96,48,96,48,96,48,48,96,48,96,48,96,48,96,48,96,48,96,48,96,96,96,48,48,48,96,48,96,48,48,96,48,96,48,96,48,96,48,96,48,48,48,48,48,96,96,48,96,96,48,48,48,96,96,96,48,96,48,96,48,96,48,96,48,96,48,48,48,48,48,48,48,96,48],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[[5,1],[[4,[[3,[2]]]]]],[[6,[8,[7]]],[[4,[[3,[2]]]]]],[[5,6,[8,[7]]],[[4,[[3,[2]]]]]],0,0,0,[[6,9],[[4,[[3,[2]]]]]],[[5,6,9],[[4,[[3,[2]]]]]],0,0,0,[10,[[12,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[10,10],[31,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[29,29],32],0,[[[35,[[34,[33]],33]]],[[12,[36]]]],[11],[[37,11],38],0,0,[[]],[[],37],[[],16],[11,[[39,[31]]]],[[38,11],[[39,[31]]]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[],36],[[],[[42,[41]]]],0,0,0,[43,[[39,[14]]]],[43,[[39,[15]]]],[43,[[39,[16]]]],[43,[[39,[17]]]],[43,[[39,[19]]]],[43,[[39,[20]]]],[43,[[39,[21]]]],[43,[[39,[22]]]],[43,[[39,[23]]]],[43,[[39,[24]]]],[43,[[39,[25]]]],[43,[[39,[26]]]],[43,[[39,[28]]]],[43,[[39,[29]]]],[43,[[39,[30]]]],[43,[[39,[10]]]],[44,[[39,[19,45]]]],[44,[[39,[20,45]]]],[44,[[39,[21,45]]]],[44,[[39,[22,45]]]],[44,[[39,[23,45]]]],[44,[[39,[24,45]]]],[44,[[39,[25,45]]]],[44,[[39,[26,45]]]],[44,[[39,[29,45]]]],[44,[[39,[30,45]]]],[44,[[46,[10]]]],[[44,41],[[39,[21,45]]]],0,0,[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[19,19],9],[[20,20],9],[[21,21],9],[[22,22],9],[[23,23],9],[[24,24],9],[[25,25],9],[[26,26],9],[[29,29],9],[[30,30],9],[[10,10],9],[[31,31],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,[[[48,[47]]],[[4,[[3,[2]]]]]],[[5,[48,[47]]],[[4,[[3,[2]]]]]],[[5,49],50],[[13,49],50],[[13,49],50],[[14,49],50],[[15,49],50],[[16,49],50],[[17,49],50],[[18,49],50],[[18,49],50],[[19,49],50],[[20,49],50],[[21,49],50],[[22,49],50],[[23,49],50],[[24,49],50],[[25,49],50],[[26,49],50],[[27,49],50],[[28,49],50],[[29,49],50],[[30,49],50],[[10,49],50],[[31,49],50],[[31,49],50],[[[35,[[0,[51,[34,[[0,[51,33]]]]]],[0,[51,33]]]],49],50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[11,[[39,[[42,[41]],31]]]],[[38,11],[[39,[[42,[41]],31]]]],[[10,11],[[12,[52]]]],[[[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[5,[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[[35,[[34,[33]],33]]],5],[6,[[4,[[3,[2]]]]]],[[5,6],[[4,[[3,[2]]]]]],[[[12,[21]],[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[5,[12,[21]],[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[],14],[[6,54],[[4,[[3,[2]]]]]],[[5,6,54],[[4,[[3,[2]]]]]],[[6,[12,[53]],[12,[53]]],[[4,[[3,[2]]]]]],[[5,6,[12,[53]],[12,[53]]],[[4,[[3,[2]]]]]],[[6,[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[5,6,[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[36,[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[5,36,[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[[0,[55,56]],57],54],[[[0,[55,56]],57],54],[30,26],[[[35,[[34,[33]],33]]],58],[[],[[4,[[3,[2]]]]]],[5,[[4,[[3,[2]]]]]],[16,[[12,[59]]]],[60,61],[60,62],[6,[[4,[[3,[2]]]]]],[[5,6],[[4,[[3,[2]]]]]],[[[35,[[34,[33]],33]]],60],[6,[[4,[[3,[2]]]]]],[[5,6],[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[[5,6],[[4,[[3,[2]]]]]],[[36,[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[5,36,[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[6,[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[[5,6,[12,[36]],[12,[53]]],[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]],[[5,6],[[4,[[3,[2]]]]]],0,0,0,0,0,0,0,0,0,[[20,63]],[[29,63]],0,0,0,0,[[16,59]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[30,30],9],[[9,36],[[3,[64]]]],[[38,9,36],[[3,[64]]]],0,0,0,0,0,0,0,0,0,[[],37],0,[[14,[34,[33]]],[[35,[[34,[33]],33]]]],[[65,6,54,6],30],0,0,[[],29],0,[[20,20],[[12,[32]]]],[[29,29],[[12,[32]]]],0,0,0,[[[35,[[34,[33]],33]]],[[12,[66]]]],0,0,[67],[67],[67],[[[35,[[34,[33]],33]]],[[12,[[42,[41]]]]]],0,0,[[11,[42,[41]]],[[39,[31]]]],[[38,11,[42,[41]]],[[39,[31]]]],[58,[[69,[[39,[27,68]]]]]],0,0,0,0,0,0,0,0,0,[[19,70],[[39,[45]]]],[[19,71],39],[[20,70],[[39,[45]]]],[[20,71],39],[[21,70],[[39,[45]]]],[[21,71],39],[[22,70],[[39,[45]]]],[[22,71],39],[[23,71],39],[[23,70],[[39,[45]]]],[[24,71],39],[[24,70],[[39,[45]]]],[[25,71],39],[[25,70],[[39,[45]]]],[[26,70],[[39,[45]]]],[[26,71],39],[[28,71],39],[[29,70],[[39,[45]]]],[[29,71],39],[[30,70],[[39,[45]]]],[[30,71],39],[[10,70],46],[[10,71],39],[[],[[4,[[3,[2]]]]]],[60],[5,[[4,[[3,[2]]]]]],0,0,0,0,0,0,0,0,[13,[[12,[72]]]],[[[35,[[34,[33]],33]]],[[39,[68]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],36],[16,[[39,[36,18]]]],[[],36],[[],36],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[36,[[39,[16]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[58,[[39,[27,68]]]],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,74],[[[76,[75,75]]],[[76,[75,75]]]],[77,77],[78,78],[[]],[[]],[[]],[[]],[[[79,[41]]],[[39,[[80,[41]],0]]]],[[],[[76,[81,81]]]],[[],77],[40],[40],[40],[40],[40],[40],[40],[40],[43,[[39,[82]]]],[43,[[39,[83]]]],[43,[[39,[74]]]],[43,[[39,[77]]]],[44,[[46,[74]]]],[40],[40],[40],[40],[[[76,[84,84]],[76,[84,84]]],9],[[77,77],9],[[74,49],50],[[[76,[51,51]],49],50],[[77,49],50],[[78,49],50],[[]],[83,74],[82,74],[[]],[[]],[[]],[[[79,[41]]],56],[[[79,[41]]],82],[[[79,[41]]],83],[[[79,[41]]],56],[[[79,[41]]],82],[[[79,[41]]],83],[[[79,[41]]],56],[[[79,[41]]],82],[[[79,[41]]],83],[[[12,[[79,[41]]]]],74],[74,1],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[],[[39,[[42,[41]],0]]]],[[82,82],[[39,[[42,[41]],0]]]],[[83,83],[[39,[[42,[41]],0]]]],[[],56],[[],56],0,0,[[],[[42,[41]]]],[82,[[42,[41]]]],[83,[[42,[41]]]],[74,[[42,[41]]]],0,0,[[],[[42,[41]]]],[82,[[42,[41]]]],[83,[[42,[41]]]],[74,[[42,[41]]]],[[82,71],39],[[83,71],39],[[74,70],46],[[74,71],39],[[77,71],39],[78,[[39,[[42,[41]],0]]]],[[82,78],[[39,[[42,[41]],0]]]],[[83,78],[[39,[[42,[41]],0]]]],[[74,78],[[39,[[42,[41]],0]]]],[[],[[42,[41]]]],[82,[[42,[41]]]],[83,[[42,[41]]]],[74,[[42,[41]]]],[[]],[[]],[[]],[[]],[[],36],[[],36],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],73],[[],73],[[],73],[[],73],[[78,[79,[41]]],[[39,[0]]]],[[82,78,[79,[41]]],[[39,[0]]]],[[83,78,[79,[41]]],[[39,[0]]]],[[74,78,[79,[41]]],[[39,[0]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[40],[40],[40],[[68,49],50],[[68,49],50],[[]],[85,68],[[],40],[[]],[67],[68,[[12,[72]]]],[[],36],[[],39],[[],39],[[],73],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[7,7],[86,86],[[]],[[]],[[]],[[],6],[40],[40],[40],[40],[40],[40],[[],36],[6,36],[7,36],[86,36],[[],[[42,[41]]]],[6,[[42,[41]]]],[7,[[42,[41]]]],[86,[[42,[41]]]],0,0,0,0,[43,[[39,[6]]]],[43,[[39,[7]]]],[43,[[39,[86]]]],[44,[[39,[6,45]]]],[44,[[39,[7,45]]]],[44,[[39,[86,45]]]],0,[40],[40],[40],[[6,6],9],[[7,7],9],[[86,86],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[6,49],50],[[6,49],50],[[7,49],50],[[7,49],50],[[86,49],50],[[86,49],50],[[]],[[]],[[]],[87,[[39,[6,0]]]],[88,[[39,[6,0]]]],[11,[[39,[6]]]],[11,[[39,[7]]]],[11,[[39,[86]]]],[[[0,[55,56]],57],54],[[[0,[55,56]],57],54],[[[0,[55,56]],57],54],[[6,63]],[[7,63]],[[86,63]],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[89,[79,[41]]],6],[[1,[79,[41]]],7],[[90,[79,[41]]],86],[[6,6],[[12,[32]]]],[[7,7],[[12,[32]]]],[[86,86],[[12,[32]]]],0,[[6,71],39],[[6,70],[[39,[45]]]],[[7,70],[[39,[45]]]],[[7,71],39],[[86,70],[[39,[45]]]],[[86,71],39],0,[[]],[[]],[[]],[7,90],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],73],[[],73],[[],73],[[7,[79,[41]],86],[[39,[0]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[90,90],[[]],[[]],[[],40],[1,40],[90,40],[40],[40],[40],[40],[[],40],[1,40],[90,40],[[1,[79,[41]]],7],[[90,[79,[41]]],86],[43,[[39,[1]]]],[44,[[39,[1,45]]]],[44,[[39,[90,45]]]],[[44,41],[[39,[1,45]]]],[[44,41],[[39,[90,45]]]],0,[40],[40],[[1,1],9],[[90,90],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[1,49],50],[[90,49],50],[[]],[[]],[11,[[39,[1]]]],[11,[[39,[90]]]],[[[0,[55,56]],57],54],[[[0,[55,56]],57],54],[[1,63]],[[90,63]],[[],40],[[],40],[[]],[[]],[[],40],[[],40],[[1,1],[[12,[32]]]],[[90,90],[[12,[32]]]],[[1,70],[[39,[45]]]],[[1,71],39],[[90,70],[[39,[45]]]],[[]],[[]],[1,90],[[],36],[1,36],[90,36],[[],39],[[],39],[[],39],[[],39],[[],73],[[],73],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[89,89],[[]],[89,40],[40],[40],[89,40],[43,[[39,[89]]]],[44,[[39,[89,45]]]],[[44,41],[[39,[89,45]]]],[[89,[79,[41]]],[[42,[41]]]],[40],[[89,89],9],[[],9],[[],9],[[],9],[[89,49],50],[[]],[11,[[39,[89]]]],[[[0,[55,56]],57],54],[[89,63]],[[],40],[[]],[[89,89],[[12,[32]]]],[[89,70],[[39,[45]]]],[[89,71],39],[[]],[89,36],[[],39],[[],39],[[],73],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[65,65],[91,91],[92,92],[93,93],[94,94],[95,95],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[43,[[39,[47]]]],[43,[[39,[65]]]],[43,[[39,[91]]]],[43,[[39,[92]]]],[43,[[39,[93]]]],[43,[[39,[94]]]],[43,[[39,[95]]]],[44,[[39,[47,45]]]],[44,[[39,[65,45]]]],[44,[[39,[91,45]]]],[44,[[39,[92,45]]]],[44,[[39,[93,45]]]],[44,[[39,[94,45]]]],[44,[[39,[95,45]]]],[[44,41],[[39,[47,45]]]],[[44,41],[[39,[94,45]]]],[40],[40],[40],[40],[40],[40],[40],[[47,47],9],[[65,65],9],[[91,91],9],[[92,92],9],[[93,93],9],[[94,94],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[47,49],50],[[65,49],50],[[91,49],50],[[92,49],50],[[93,49],50],[[94,49],50],[[95,49],50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[47,9],0,[[47,70],[[39,[45]]]],[[47,71],39],[[65,71],39],[[65,70],[[39,[45]]]],[[91,71],39],[[91,70],[[39,[45]]]],[[92,71],39],[[92,70],[[39,[45]]]],[[93,71],39],[[93,70],[[39,[45]]]],[[94,71],39],[[94,70],[[39,[45]]]],[[95,70],[[39,[45]]]],[[95,71],39],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[[48,[47]]],[[39,[95]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[96,96],[[[48,[[0,[75,88,97,75]]]]],[[48,[[0,[75,88,97,75]]]]]],[[]],[[]],0,[40],[40],[40],[40],[43,[[39,[96]]]],[43,[[39,[[48,[[0,[98,88,97,75]]]]]]]],[44,[[39,[96,45]]]],[44,[[39,[[48,[[0,[97,88,97,75]]]],45]]]],[40],[40],[[96,96],9],[[[48,[[0,[84,88,97,75]]]],[48,[[0,[84,88,97,75]]]]],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[96,49],50],[[[48,[[0,[51,88,97,75]]]],49],50],[[]],[[]],[[[48,[47]],74,54,10],[[39,[[48,[25]],0]]]],[[[0,[55,56]],57],54],[[[0,[55,56]],57],54],[[96,63]],[[[48,[[0,[55,88,97,75]]]],63]],[[],40],[[],40],[[]],[[]],0,[[47,96],[[48,[47]]]],0,[[24,96],[[48,[24]]]],[[6,9,96],[[48,[20]]]],[[23,96],[[48,[23]]]],0,[[96,96],[[12,[32]]]],[[[48,[[0,[99,88,97,75]]]],[48,[[0,[99,88,97,75]]]]],[[12,[32]]]],[[96,71],39],[[96,70],[[39,[45]]]],[[[48,[[0,[88,88,97,75]]]],70],[[39,[45]]]],[[[48,[[0,[87,88,97,75]]]],71],39],0,0,0,[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],73],[[],73],0,[[[48,[19]]],[[39,[0]]]],0,[[[48,[[0,[0]]]]],[[39,[0]]]],[[[48,[47]]],[[39,[0]]]],[[[48,[24]]],[[39,[0]]]],[[[48,[23]]],[[39,[0]]]],[[[48,[20]]],[[39,[0]]]],0,[[[48,[25]]],[[39,[0]]]],[[]],[[]]],"c":[],"p":[[4,"KeyDerivator"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"NodeAPI"],[3,"DigestIdentifier"],[3,"KeyIdentifier"],[3,"HashSet"],[15,"bool"],[3,"ValueWrapper"],[15,"str"],[4,"Option"],[4,"ApiError"],[3,"TapleSettings"],[3,"NetworkSettings"],[4,"ListenAddr"],[3,"NodeSettings"],[4,"ListenAddrErrors"],[3,"ApprovalRequest"],[3,"ApprovalResponse"],[4,"ApprovalState"],[3,"ApprovalEntity"],[3,"EvaluationRequest"],[3,"EvaluationResponse"],[3,"Event"],[3,"Metadata"],[4,"Notification"],[3,"SubjectData"],[3,"TimeStamp"],[3,"ValidationProof"],[4,"DbError"],[4,"Ordering"],[8,"DatabaseCollection"],[8,"DatabaseManager"],[3,"Taple"],[3,"String"],[3,"MemoryManager"],[3,"MemoryCollection"],[4,"Result"],[15,"usize"],[15,"u8"],[3,"Vec"],[8,"Deserializer"],[8,"Read"],[3,"Error"],[6,"Result"],[4,"EventRequest"],[3,"Signed"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"Value"],[15,"i64"],[15,"u64"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[3,"NotificationHandler"],[15,"u32"],[3,"TapleShutdownManager"],[3,"Receiver"],[3,"Sender"],[8,"Hasher"],[8,"Iterator"],[3,"StartRequest"],[3,"PeerId"],[3,"Demand"],[4,"Error"],[6,"BoxFuture"],[8,"Write"],[8,"Serializer"],[8,"Error"],[3,"TypeId"],[4,"KeyPair"],[8,"Clone"],[3,"BaseKeyPair"],[3,"CryptoBox"],[4,"Payload"],[15,"slice"],[15,"array"],[8,"Default"],[6,"Ed25519KeyPair"],[6,"Secp256k1KeyPair"],[8,"PartialEq"],[4,"ConfigError"],[3,"SignatureIdentifier"],[8,"Serialize"],[8,"BorshSerialize"],[4,"DigestDerivator"],[4,"SignatureDerivator"],[3,"FactRequest"],[3,"TransferRequest"],[3,"EOLRequest"],[4,"RequestState"],[3,"TapleRequest"],[3,"Signature"],[8,"BorshDeserialize"],[8,"Deserialize"],[8,"PartialOrd"],[8,"ApiModuleInterface"],[8,"Derivable"],[13,"EventCreationError"],[13,"ApprovalInternalError"],[13,"IP4"],[13,"IP6"],[13,"Memory"],[13,"ApprovalReceived"],[13,"ObsoletedApproval"],[13,"NewEvent"],[13,"StateUpdated"],[13,"NewSubject"],[8,"KeyGenerator"],[8,"DHKE"],[8,"KeyMaterial"],[8,"DSA"],[13,"SettingsError"],[8,"Derivator"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
